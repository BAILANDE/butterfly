<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>可编程序控制器技术与应用</title>
    <url>/2024/09/07/PLC/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="可编程序控制器（PLC）"><a href="#可编程序控制器（PLC）" class="headerlink" title="可编程序控制器（PLC）"></a>可编程序控制器（PLC）</h1><blockquote>
<p> 前言：本文是由Ding在大学课程“可编程序控制器技术与应用”一课整理的笔记，内容包括老师板书、教材资料和互联网资料（如有侵权请联系作者在24小时内删除），<strong>仅供参考</strong>。如有错误请在首页（关于页、评论区）联系作者指出。<br>本文所使用的软件为博途V16（TIA Portal V16），PLC设备为西门子PLC_1[CPU 1214C DC&#x2F;DC&#x2F;DC]</p>
</blockquote>
<h2 id="PLC的起源和诞生"><a href="#PLC的起源和诞生" class="headerlink" title="PLC的起源和诞生"></a>PLC的起源和诞生</h2><ul>
<li><strong>起源</strong>：1968年，美国最大的汽车制造商<a href="https://baike.baidu.com/item/%E9%80%9A%E7%94%A8%E6%B1%BD%E8%BD%A6%E5%85%AC%E5%8F%B8/556241"><strong>通用汽车公司</strong></a>为了适应生产工艺不断更新的需要，期望找到一种新的方法，尽可能减少重新设计继电控制系统和重新接线的工作，以降低成本、缩短周期，设想把计算机通用、灵活、功能完备等优点和继电控制系统的简单易懂、价格便宜等优点结合起来，制成一种通用控制装置，并把计算机的编程方法和程序输入方式加以简化，用面向控制过程、面向问题的“自然语言”进行编程，使不熟悉计算机的人也能方便地使用。</li>
<li><strong>诞生</strong>：1969年，美国<a href="https://baike.baidu.com/item/%E7%BE%8E%E5%9B%BDDEC%E5%85%AC%E5%8F%B8/5559330#:~:text=%E7%BE%8E%E5%9B%BDDEC%E5%85%AC%E5%8F%B8%EF%BC%88%E5%8D%B3%E7%BE%8E%E5%9B%BD%E6%95%B0%E5%AD%97%E8%AE%BE%E5%A4%87%E5%85%AC%E5%8F%B8%EF%BC%8C%E8%8B%B1%E6%96%87%EF%BC%9ADigital%20Equipment%20Corporation%EF%BC%8C%E7%AE%80%E7%A7%B0DEC%EF%BC%89%E3%80%82%201998%E5%B9%B41%E6%9C%88DEC%E5%85%AC%E5%8F%B8%E8%A2%AB,%E5%BA%B7%E6%9F%8F%20%E4%BB%A596%E4%BA%BF%E7%BE%8E%E5%85%83%E7%9A%84%E4%BB%B7%E6%A0%BC%E6%94%B6%E8%B4%AD%EF%BC%8C2001%E5%B9%B4%20%E6%83%A0%E6%99%AE%20%E5%BA%B7%E6%9F%8F%E5%AE%A3%E5%B8%83%E5%90%88%E5%B9%B6%E3%80%82"><strong>美国数字设备公司</strong></a>研制出了第一台可编程序逻辑控制器PDP—14，在通用汽车公司的自动装配线上试用获得了成功。</li>
</ul>
<h2 id="PLC简介"><a href="#PLC简介" class="headerlink" title="PLC简介"></a>PLC简介</h2><ol>
<li>可编程逻辑控制器（Programmable Logic Controller）简称PLC，最初只能进行计数、定时及开关量逻辑控制。<br>随着计算机技术的发展，可编程逻辑控制的功能不断扩展和完善，其功能远远超出了逻辑控制的范围，具有了PID、A&#x2F;D、D&#x2F;A、算术运算、数字量智能控制、监控、通信联网等多方面的功能，它已变成了实际意义上的一种工业控制计算机。</li>
<li>于是，美国电器制造商协会将其正式命名为可编程序控制器（Programmable Controller），简称PC。</li>
<li>由于它与<a href="https://baike.baidu.com/item/%E4%B8%AA%E4%BA%BA%E8%AE%A1%E7%AE%97%E6%9C%BA/3731770"><strong>个人计算机(Personal computer)</strong></a>的简称PC相同，所以人们习惯上仍将其称为<a href="https://baike.baidu.com/item/%E5%8F%AF%E7%BC%96%E7%A8%8B%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/84414?fromtitle=PLC&fromid=275974"><strong>PLC</strong></a>。</li>
</ol>
<h2 id="PLC定义"><a href="#PLC定义" class="headerlink" title="PLC定义"></a>PLC定义</h2><ul>
<li>1987年2月，国际电工委员会(IEC)对可编程控制器的定义是：1987年，国际电工委员会 (IEC)是这样定义可编程控制器的：“可编程控制器是一种数字运算操作的电子系统，专为在工业环境下应用而设计，它采用可编程序的存储器，用来在其内部存储执行逻辑运算、数序控制、定时、技术和算术运算等操作的指令，并通过数字式、模拟式的输入和输出，控制各种类型的机械或生产过程。</li>
</ul>
<h2 id="PLC的分类"><a href="#PLC的分类" class="headerlink" title="PLC的分类"></a>PLC的分类</h2><ol>
<li>按结构特点分<ul>
<li>整体式；：结构紧凑、体积小、价格低,小型PLC一般采用整体式结构</li>
<li>模块式：配置灵活，可根据需要选配不同规模的系统，且装配便，便于扩展和维修，大、中型PLC一般采用模块式结构</li>
</ul>
</li>
<li>按控制规模分<ul>
<li>微型:I&#x2F;0点数小于64</li>
<li>小型:I&#x2F;0点数64-256</li>
<li>中型:I&#x2F;0点数256-1024</li>
<li>大型:I&#x2F;0点数1024以上</li>
</ul>
</li>
<li>按控制性能分<ul>
<li>低档机</li>
<li>中档机</li>
<li>高档机</li>
</ul>
</li>
</ol>
<h2 id="PLC应用"><a href="#PLC应用" class="headerlink" title="PLC应用"></a>PLC应用</h2><ol>
<li>数字量控制</li>
<li>运动量控制</li>
<li>闭环过程控制</li>
<li>数据处理</li>
<li>通信联网</li>
</ol>
<h2 id="PLC基本结构"><a href="#PLC基本结构" class="headerlink" title="PLC基本结构"></a>PLC基本结构</h2><ul>
<li>CPU,电源，储存器和输入输出接口电路等组成（其硬件组成与微型计算机相似。）</li>
</ul>
<h2 id="PLC特点"><a href="#PLC特点" class="headerlink" title="PLC特点"></a>PLC特点</h2><ul>
<li>（可编程逻辑控制器）的特点包括：<ol>
<li>编程方法简单易学</li>
<li>功能强，性能价格比高</li>
<li>硬件配套齐全，用户使用方便，适应性强</li>
<li>可靠性高，抗干扰能力强</li>
<li>系统的设计、安装、调试工作量少</li>
<li>维修工作量小，维修方便</li>
<li>体积小，能耗低</li>
</ol>
</li>
</ul>
<h2 id="PLC基本编程语言"><a href="#PLC基本编程语言" class="headerlink" title="PLC基本编程语言"></a>PLC基本编程语言</h2><ol>
<li>梯形图</li>
<li>语句表</li>
<li>功能块图</li>
<li>顺序功能图</li>
<li>结构文本</li>
</ol>
<h2 id="PLC控制系统示意图"><a href="#PLC控制系统示意图" class="headerlink" title="PLC控制系统示意图"></a>PLC控制系统示意图</h2><p><img src="/img/PLC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="PLC控制系统示意图"></p>
<h2 id="PLC工作原理"><a href="#PLC工作原理" class="headerlink" title="PLC工作原理"></a>PLC工作原理</h2><p><img src="/img/PLC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="PLC工作原理"></p>
<ul>
<li><strong>扫描周期</strong>：PLC在RUN工作状态时，执行一次扫描过程所需的时间称为扫描周期，典型值为1～l00ms</li>
</ul>
<h1 id="S7-1200-PLC-简介"><a href="#S7-1200-PLC-简介" class="headerlink" title="S7-1200 PLC 简介"></a>S7-1200 PLC 简介</h1><ol>
<li><p>S7-1200 PLC (Programmable Logic Controller) 是西门子公司推出的一款PLC，主要面向简单而高精度的自动化任务。S7-1200设计紧凑、组态灵活且具有功能强大的指令集，这些特点的组合使它成为控制各种应用的完美解决方案。CPU将微处理器、集成电源、输入电路和输出电路组合到一个设计紧凑的外壳中以形成功能强大的PLC。CPU根据用户程序逻辑监视输入并更改输出，用户程序可以包含布尔逻辑、计数、定时、复杂数学运算以及与其它智能设备的通信。</p>
</li>
<li><p>目前S7-1200 PLC有四种CPU型号:1211C、1212C、1214C、1215C，<a href="https://www.ad.siemens.com.cn/productportal/prods/s7-1200_plc_easy_plus/04-version/01-Specification/S7-1200_New_Para.html">点击跳转查看具体参数</a></p>
</li>
<li><p>S7-1200 PLC 最多可以扩展8个信号模块和3个通信模块，最大本地数字I&#x2F;O点数为284个最大本地模拟I&#x2F;O点数为69个S7-1200中央机架最大扩展8个数字量和模拟量模块，如果超过该数量可通过PROFIBUS或PROFINET扩展分布式I&#x2F;O系统，将过程信号连接到S7-1200控制器。CPU类型决定最多可扩展的模块数量，CPU1211C不能扩展，CPU1212C可扩展2个，CPU1214C 可扩展8个。</p>
</li>
<li><p>S7-1200视频展示</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1nzpzeFE8U?t=9.3"><strong>点我跳转b站视频</strong>，精准空降（作者实力有限，站内播放可能会有小问题，希望理解）</a></li>
</ul>
</li>
</ol>
<div class="video-container">
  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113103048082794&bvid=BV1nzpzeFE8U&cid=25792743879&p=1&autoplay=0" allowfullscreen></iframe>
</div>

<ol start="3">
<li>这里奉上一份S7-1200系统手册<br><a href="/PLC/s71200_system_manual_zh-CHS_zh-CHS.pdf" target="_blank">点击下载PDF文件</a></li>
</ol>
<h1 id="博途V16（TIA-Portal-V16）PLC编程入门"><a href="#博途V16（TIA-Portal-V16）PLC编程入门" class="headerlink" title="博途V16（TIA Portal V16）PLC编程入门"></a>博途V16（TIA Portal V16）PLC编程入门</h1><blockquote>
<p>软件介绍：博途V16（TIA Portal V16）是西门子推出的自动化软件，用于编程、配置和维护自动化系统。它支持多种编程语言，提供统一的工程环境，简化了自动化设备的配置和维护工作。它还包含了一些新功能，如增强的指令集和改进的仿真工具，帮助工程师更高效地完成自动化任务。（目前最高版本为v19）</p>
</blockquote>
<h2 id="PLC组态"><a href="#PLC组态" class="headerlink" title="PLC组态"></a>PLC组态</h2><ol>
<li>在使用博途V16（TIA Portal V16）进行初次操作时，需要创建一个新的项目文件，并对设备进行配置。请确保配置的设备型号与实际的硬件设备相匹配。如果您不确定具体的PLC硬件型号，可以选择一个非特定的CPU型号作为起点。之后，通过点击“获取连接设备的组态”，系统将自动检测并配置PLC。请注意，这一步骤的前提是您必须连接了实际的PLC硬件。</li>
</ol>
<p><img src="/PLC/%E9%9D%9E%E7%89%B9%E5%AE%9ACPU.jpg" alt="非特定的CPU"></p>
<p><img src="/PLC/%E8%8E%B7%E5%8F%96%E7%9B%B8%E8%BF%9E%E8%AE%BE%E5%A4%87%E7%9A%84%E7%BB%84%E6%80%81.jpg" alt="获取相连设备的组态"></p>
<ol start="2">
<li><p>在组态完成后，就可以编写程序了，在以下的笔记中会逐步讲解博途V16（TIA Portal V16）中的指令以及其他内容。</p>
</li>
<li><p>在完成组态设置后，打开项目视图。在左侧的项目树中，您会看到已经配置好的设备，例如这里的“PLC_1[CPU 1214C DC&#x2F;DC&#x2F;DC]”。只需双击该设备，就可以查看其程序块。在程序块列表中，找到并双击“main[OB1]”，即可进入主程序块，开始编程工作。</p>
</li>
<li><p>可以参考此视频简单了解博途V16软件的界面和基本功能，感谢b站up主电工鼠</p>
</li>
</ol>
<p><a href="https://space.bilibili.com/1061641039">点击跳转此up主的主页</a><br><a href="https://www.bilibili.com/video/BV1dW4y1W7UT?t=60.2">点击跳转此视频主页</a></p>
<div class="video-container">
  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=945485174&bvid=BV1dW4y1W7UT&cid=900689965&p=1&autoplay=0" allowfullscreen></iframe>
</div>

<blockquote>
<p>关于PLC与电脑的连接方式？<br>PLC（可编程逻辑控制器）与电脑的连接方式主要有以下几种：</p>
<ol>
<li><strong>串口连接</strong>：通过RS-232或RS-485串行端口进行连接。如果电脑有COM口，可以直接使用串口线连接PLC和电脑。如果电脑没有COM口，可以使用USB转串口的转换器进行连接。</li>
<li><strong>以太网连接</strong>：通过工业以太网连接PC和PLC。这通常涉及到使用网线将电脑的以太网端口与PLC的以太网端口相连。连接后，需要设置电脑的IP地址，确保与PLC的IP地址在同一网段，并且选择一个未使用的IP地址以避免冲突。</li>
<li><strong>无线连接</strong>：一些现代PLC支持无线连接，可以通过Wi-Fi与电脑建立连接。这通常需要在PLC和电脑上配置相应的无线网络设置。</li>
<li><strong>USB连接</strong>：某些PLC支持通过USB接口与电脑连接，这种情况下需要使用USB到PLC通信口的专用电缆，并可能需要在电脑上安装相应的驱动程序。<br>在连接PLC与电脑时，还需要考虑通信协议的设置，如Modbus、Profinet等，确保PLC和电脑端的通信参数（如波特率、数据位、停止位等）匹配。连接成功后，可以通过专用的软件（如STEP7、TIA Portal、SoMachine等）进行程序的上传、下载、监控和调试。<br>在我的实际操作过程中，电脑与PLC连接主要使用以太网连接（<a href="https://baike.baidu.com/item/Profinet/2310540">Profinet</a>）</li>
</ol>
<p>如果没有真实的PLC硬件怎么办？<br>博途V16（TIA Portal V16）拥有仿真、强制表、监控表等功能，可以辅助我们学习PLC</p>
<p>在西门子PLC中，”I”、”Q”和”M”分别是什么？<br>I”、”Q”和”M”是三种不同类型的存储区，它们在编程和控制过程中扮演着重要的角色：</p>
<ol>
<li><strong>I存储区</strong>：代表输入存储区（Input），用于接收外部信号，如传感器、按钮、开关等设备的信号。这些信号可以是数字量或模拟量，PLC通过这些输入信号来感知外部环境的状态变化，并根据程序逻辑进行相应的控制操作。</li>
<li><strong>Q存储区</strong>：代表输出存储区（Output），用于提供电平信号，控制执行器、继电器、电机等设备的工作。PLC通过输出存储区来对外部设备进行控制，实现自动化控制系统的目标。</li>
<li><strong>M存储区</strong>：代表中间存储区（Memory Bit），是PLC内部的位寄存器，用于存储程序中的中间结果、计数器、定时器等信息。在编程时，M位通常用于标志位，实现程序中的逻辑运算、计数、定时等功能。<br>这些存储区在PLC编程和控制中非常重要，它们使得PLC能够灵活地处理输入信号、控制输出设备，并存储和处理程序运行中的中间数据。掌握I、Q、M的概念和应用对于PLC编程工程师来说是基础知识。<br><em><strong>另外在编程过程中，建议先把 I”、”Q”和”M”先填入变量表，并写清楚名称，方便后期编写程序。另外，在程序段中也应该填写相应注释</strong></em></li>
</ol>
</blockquote>
<h2 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h2><blockquote>
<p>由于笔记内容繁多，不利于直接阅读，因此所有笔记均以压缩包格式提供。</p>
</blockquote>
<p>1. </p>
]]></content>
  </entry>
  <entry>
    <title>《产品三维造型与结构设计（UG）》测试内容</title>
    <url>/2024/09/05/UG/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://wweo.lanzouu.com/iO2O62j0a06d">邮寄</a><br><a href="https://wweo.lanzouu.com/i3vug2jb16hc">polezi</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>calculator(计算器)</title>
    <url>/2024/09/20/calculator/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="calculator-计算器"><a href="#calculator-计算器" class="headerlink" title="calculator(计算器)"></a>calculator(计算器)</h1><h2 id="online-calculator（web）"><a href="#online-calculator（web）" class="headerlink" title="online-calculator（web）"></a>online-calculator（web）</h2><ul>
<li>一个简单的在线计算器</li>
</ul>
<blockquote>
<p>github开源地址：<a href="https://github.com/BAILANDE/Online-calculator">https://github.com/BAILANDE/Online-calculator</a><br>演示网站1: <a href="https://online-calculator.dingview.top/">https://online-calculator.dingview.top</a><br>演示网站2: <a href="https://online-calculator-git-main-dings-projects-ba804e9a.vercel.app/">https://online-calculator-git-main-dings-projects-ba804e9a.vercel.app</a></p>
</blockquote>
<iframe src="https://online-calculator.dingview.top/" scrolling="no" border="0" frameborder="yes" framespacing="0" allowfullscreen="true"width="100%" height=700 ></iframe>
]]></content>
      <categories>
        <category>AI编程</category>
      </categories>
      <tags>
        <tag>AI编程</tag>
      </tags>
  </entry>
  <entry>
    <title>债务追讨（2024.9.17）</title>
    <url>/2024/09/17/%E5%80%BA%E5%8A%A1%E8%BF%BD%E8%AE%A8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请联系作者" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6bb479b431a0a1a6d4fec8a722e62d621f135c261e4b11fab4fa28772e5be412"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>个人权益维护</category>
      </categories>
      <tags>
        <tag>个人权益维护</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习笔记</title>
    <url>/2024/09/25/python/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="python学习笔记"><a href="#python学习笔记" class="headerlink" title="python学习笔记"></a>python学习笔记</h1><blockquote>
<p>尽管作者并没有计算机专业的背景，也没有接受过正规的Python教育，但正是出于对编程的浓厚兴趣，驱使他开始了这段学习之&gt;旅。他的学习材料主要来源于网络资源和各种书籍。因此，笔记中的内容可能会显得有些分散，但作者正在努力将这些知识点整合起来，以便为读者提供一个更加流畅和连贯的学习体验。</p>
</blockquote>
<p><strong>笔记仅供参考，如有错误请在评论区指出或联系作者</strong></p>
<p>解释一下为什么学习python：</p>
<ol>
<li><p><strong>易于上手</strong>：Python 的语法简洁明了，非常适合编程新手作为入门语言。</p>
</li>
<li><p><strong>应用广泛</strong>：Python 在 Web 开发、数据分析、人工智能、科学计算、自动化脚本和网络爬虫等多个领域都有广泛的应用。</p>
</li>
<li><p><strong>活跃的社区</strong>：Python 拥有一个非常活跃的社区，提供了大量的资源、工具和框架，以及解决问题的支持。</p>
</li>
<li><p><strong>丰富的库和框架</strong>：Python 拥有丰富的第三方库和框架，如 NumPy、Pandas、Django、Flask、TensorFlow 等，这些库简化了在各个领域的开发工作。</p>
</li>
<li><p><strong>数据科学和机器学习的首选</strong>：Python 是数据科学和机器学习领域的首选语言，它的强大数据处理能力和与数据可视化库的无缝集成使其备受青睐。</p>
</li>
<li><p><strong>跨平台兼容性</strong>：Python 是一种跨平台的语言，可以在 Windows、macOS 和 Linux 等多种操作系统上运行。</p>
</li>
<li><p><strong>编程范式的灵活性</strong>：Python 支持多种编程范式，包括面向对象、命令式、函数式和过程式编程，为开发者提供了灵活性。</p>
</li>
<li><p><strong>职业前景广阔</strong>：随着对 Python 开发者的需求不断增长，掌握 Python 技能可以开启更多的就业机会和更高的薪资待遇。</p>
</li>
<li><p><strong>自动化和脚本编写</strong>：Python 常用于编写自动化脚本，可以自动化日常任务，从而提高工作效率。</p>
</li>
<li><p><strong>教育领域的应用</strong>：许多教育机构和在线课程选择 Python 作为教学语言，因为它有助于学生更快地掌握编程概念。</p>
</li>
<li><p><strong>快速开发和原型设计</strong>：Python 的快速开发能力使其在快速原型设计和迭代开发中非常有用。</p>
</li>
<li><p><strong>云计算的广泛应用</strong>：Python 在 AWS、Azure 和 Google Cloud Platform 等云计算服务中也有广泛的应用。</p>
</li>
<li><p><strong>可扩展性</strong>：Python 程序可以轻松扩展，以处理更大的工作负载或更复杂的任务。</p>
</li>
<li><p><strong>开源和免费</strong>：Python 是开源的，这意味着它是免费使用的，并且有一个持续更新和改进的代码库。</p>
</li>
</ol>
<p>总结来说，Python 的多功能性、易用性和强大的社区支持使其成为学习编程的理想选择。</p>
<h2 id="python基本概述"><a href="#python基本概述" class="headerlink" title="python基本概述"></a>python基本概述</h2><ul>
<li>参考<a href="https://baike.baidu.com/item/Python/407313?fromModule=disambiguation">百度百科</a></li>
<li><a href="https://www.python.org/">python官网</a></li>
</ul>
<h2 id="python的IDE"><a href="#python的IDE" class="headerlink" title="python的IDE"></a>python的IDE</h2><ul>
<li><p>以下是目前最强大的10个Python IDE，包括了它们的主要特点以及官方网站的链接：</p>
<ol>
<li><p><strong>PyCharm</strong>：由 JetBrains 开发，适合专业开发者，支持大型Python项目开发，有免费社区版和付费专业版。</p>
<ul>
<li>官网链接：<a href="https://www.jetbrains.com/pycharm/">PyCharm</a></li>
</ul>
</li>
<li><p><strong>Visual Studio Code</strong>：微软开发的轻量级但功能强大的编辑器，支持Python开发，可以通过安装扩展来增强功能。</p>
<ul>
<li>官网链接：<a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
</ul>
</li>
<li><p><strong>Sublime Text</strong>：高度可定制的代码编辑器，支持多种语言，包括Python，以其速度和灵活性而闻名。</p>
<ul>
<li>官网链接：<a href="https://www.sublimetext.com/">Sublime Text</a></li>
</ul>
</li>
<li><p><strong>Atom</strong>：由GitHub开发的开源编辑器，可定制性强，支持Python开发。</p>
<ul>
<li>官网链接：<a href="https://atom-editor.cc/">Atom</a></li>
</ul>
</li>
<li><p><strong>Jupyter Notebook</strong>：适合数据科学和交互式编程，支持多种编程语言，包括Python。</p>
<ul>
<li>官网链接：<a href="https://jupyter.org/">Jupyter Notebook</a></li>
</ul>
</li>
<li><p><strong>Spyder</strong>：科学计算和数据分析的IDE，与Anaconda发行版捆绑，适合进行科学计算和数据分析。</p>
<ul>
<li>官网链接：<a href="https://www.spyder-ide.org/">Spyder IDE</a></li>
</ul>
</li>
<li><p><strong>Eclipse with PyDev</strong>：Eclipse是一个开源的IDE，通过PyDev插件支持Python开发。</p>
<ul>
<li>官网链接：<a href="https://marketplace.eclipse.org/content/pydev-python-ide-eclipse">PyDev</a></li>
</ul>
</li>
<li><p><strong>Wing IDE</strong>：提供强大的调试和代码分析工具，支持远程开发，适合专业开发者。</p>
<ul>
<li>官网链接：<a href="https://wingware.com/downloads">Wing IDE</a></li>
</ul>
</li>
<li><p><strong>Vim</strong>：高度可配置的文本编辑器，通过插件支持Python开发，适合喜欢使用键盘的高级用户。</p>
<ul>
<li>官网链接：<a href="https://www.vim.org/">Vim</a></li>
</ul>
</li>
<li><p><strong>Emacs</strong>：可扩展的、自定义的文本编辑器，支持Python编辑，适合喜欢深度定制自己编辑器的用户。</p>
<ul>
<li>官网链接：<a href="https://www.gnu.org/software/emacs/">Emacs</a></li>
</ul>
</li>
</ol>
</li>
<li><p>这些IDE各有特点，适合不同需求和场景的Python开发。</p>
</li>
<li><p>我所使用的是PyCharm，PyCharm 是由 JetBrains 公司开发的一款流行的 Python 集成开发环境（IDE）。它被广泛认为是 Python 编程语言中最强大的 IDE 之一，特别适合进行大型项目的开发。PyCharm 提供了许多为 Python 开发设计的强大功能。</p>
</li>
<li><p>PyCharm分为两个版本：免费的 Community Edition 和付费的 Professional Edition。Community Edition 提供了基本的 Python 开发功能，而 Professional Edition 则提供了更多的企业级功能，如 Web 开发、数据库工具、远程开发等。</p>
</li>
<li><p>对于刚开始接触Python的新手来说，首要任务是熟悉Python的开发环境配置以及安装一个合适的集成开发环境（IDE）。以下是一些建议：</p>
<ol>
<li><p><strong>安装Python</strong>：</p>
<ul>
<li>首先，访问Python的官方网站下载适合您操作系统的Python版本。</li>
<li>安装Python时，确保勾选了“Add Python to PATH”选项，这样可以在命令行中方便地调用Python。</li>
</ul>
</li>
<li><p><strong>配置环境</strong>：</p>
<ul>
<li>验证安装是否成功，可以在命令行中输入<code>python --version</code>或<code>python3 --version</code>来检查Python的版本。</li>
<li>了解如何创建和激活虚拟环境，这对于管理不同项目的依赖非常有用。</li>
</ul>
</li>
<li><p><strong>选择IDE</strong>：</p>
<ul>
<li>选择一个功能强大且易于使用的IDE，如PyCharm、Visual Studio Code（VSCode）、Eclipse（配合PyDev插件）等。</li>
<li>安装IDE，并熟悉其基本功能，如代码高亮、自动补全、代码调试等。</li>
</ul>
</li>
<li><p><strong>设置IDE</strong>：</p>
<ul>
<li>在IDE中配置Python解释器，确保它指向了正确安装的Python版本。</li>
<li>探索和安装必要的插件或扩展，以增强IDE的功能。</li>
</ul>
</li>
<li><p><strong>编写Hello World</strong>：</p>
<ul>
<li>在IDE中创建您的第一个Python脚本，编写经典的“Hello, World!”程序，并运行它以验证环境配置是否正确。</li>
</ul>
</li>
<li><p><strong>寻求帮助</strong>：</p>
<ul>
<li>如果在配置环境或安装IDE时遇到问题，不要犹豫，寻求社区的帮助或查阅相关文档。</li>
</ul>
</li>
</ol>
</li>
<li><p>记住，一个舒适且功能齐全的开发环境是高效编程的基础。花时间正确设置您的环境，将有助于您更顺利地开始Python学习之旅。如果您遇到困难或不确定如何进行，请参考bilibili up主 **<a href="https://www.bilibili.com/video/BV1jgWLeREbp?t=288.3">年年吃布饱的视频</a>**（点击此处精准空降原视频）。</p>
</li>
<li><p>视频作者主页: <strong><a href="https://space.bilibili.com/3546660779068014">点此跳转</a></strong></p>
</li>
</ul>
<div class="video-container">
  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113004884527853&bvid=BV1jgWLeREbp&cid=500001658178767&p=1Autoplay=0" allowfullscreen></iframe>
</div>

<ul>
<li><p>对于刚开始学习编程的新手来说，<strong>免费的PyCharm社区版（PyCharm Community Edition）</strong>已经足够满足基本的编程需求。</p>
<ul>
<li><a href="https://www.jetbrains.com/pycharm/download/?section=windows">下载PyCharm社区版</a></li>
</ul>
</li>
<li><p>在阅读了前面的介绍之后，您对Python已经有了初步的认识。现在，让我们正式踏上Python的学习之旅。</p>
</li>
<li><p>为了使您的编程体验更加流畅，您可以先对PyCharm进行一些优化设置，以确保它更加符合您的工作习惯，例如</p>
<ul>
<li>设置所需快捷键。<ul>
<li>ctrl+向上滚动滚轮为字体放大</li>
<li>ctrl+向下滚动滚轮为字体缩小</li>
<li>………………</li>
</ul>
</li>
<li>配置所需插件<ul>
<li>汉化包（帮助我们更好的使用PyCharm）</li>
<li>翻译插件（帮助我们理解英文代码和注释）</li>
</ul>
</li>
<li>设置自己喜欢的主题</li>
</ul>
</li>
</ul>
<h2 id="python，从此处开始"><a href="#python，从此处开始" class="headerlink" title="python，从此处开始"></a>python，从此处开始</h2><h3 id="python基础语法"><a href="#python基础语法" class="headerlink" title="python基础语法"></a>python基础语法</h3><h4 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h4><ol>
<li><p>字面量的含义：在代码中被写下来的、固定的值。称之为字面量</p>
</li>
<li><p>常见字面量的类型<br>目前先了解整数、浮点数、字符串即可</p>
</li>
<li><p>基于print语句完成各类字面量的输出</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">666</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">13.14</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>在程序代码中，对代码进行解释说明的文字确实被称为注释，这些注释不会被系统执行。根据你的描述，我们可以将注释分为以下两种：</p>
<ol>
<li><p><strong>单行注释</strong>：</p>
<ul>
<li>这是最常见的注释方式，通常用于解释代码中的某一行或几行。</li>
<li>单行注释以特定的符号开始，比如在Python中是 <code>#</code>。</li>
<li>单行注释仅对紧随其后的一行代码有效。</li>
</ul>
<p>示例（Python）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是一个单行注释</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, World!&quot;</span>)  <span class="comment"># 这行代码会打印 &quot;Hello, World!&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>注：一般建议”#”和注释内容之间用空格隔开</li>
</ul>
</li>
<li><p><strong>多行注释</strong>：</p>
<ul>
<li>多行注释用于跨越多行的解释说明。</li>
<li>在某些语言中，可以使用特定的多行注释语法，而在Python中，通常使用三个连续的单引号 <code>&#39;&#39;&#39;</code> 或双引号 <code>&quot;&quot;&quot;</code> 来创建多行字符串，虽然它们主要用于文档字符串（docstrings），但也可以用来创建多行注释。</li>
<li>多行注释可以包含在代码块的开始处，用于解释整个函数、类或模块。</li>
</ul>
<p>示例（Python）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这是一个多行注释</span></span><br><span class="line"><span class="string">可以跨越多行</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<p>在实际编程中，注释的使用应该简洁明了，避免冗余，同时确保它们能够为代码的阅读者提供有价值的信息。此外，注释应该随着代码的更新而更新，以保持代码的准确性和可维护性。</p>
<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ul>
<li>变量：在程序运行时，能够存储计算结果或能表示值的抽象概念，简单的说，变量就是在程序运行时，记录数据用的。</li>
<li>变量的定义格式<ul>
<li>变量名 &#x3D; 变量值</li>
<li>每个变量都有自己的名称，称之为“变量名”，即变量本身。</li>
<li>每个变量都有自己存储的值（内容），称之为“变量值”。</li>
<li>“&#x3D;”表示赋值，将右侧的值赋予左侧的变量。</li>
</ul>
</li>
<li>需注意，变量的值<strong>是可以发生改变的</strong>，下面是一个示例</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化变量money，表示钱包中的初始金额</span></span><br><span class="line">money = <span class="number">50</span></span><br><span class="line"><span class="comment"># 打印初始金额，单位是人民币</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;钱包还有：&quot;</span>, money, <span class="string">&quot;人民币&quot;</span>)</span><br><span class="line"><span class="comment"># 购买一个汉堡，花费10元人民币，从钱包中减去10元</span></span><br><span class="line">money = money-<span class="number">10</span>  </span><br><span class="line"><span class="comment"># 打印购买汉堡后的剩余金额</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;钱包还有：&quot;</span>, money, <span class="string">&quot;人民币&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>拓展：</p>
<ol>
<li>print语句如何输出多份内容？<br>   答：使用”,”隔开，例如：   <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(内容<span class="number">1</span>,内容<span class="number">2</span>, 内容<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li>
<li>python如何使用加减乘除？<br>   答：+（加）、-（减）、*（乘）、&#x2F;（除）</li>
</ol>
</blockquote>
<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul>
<li><p>在之前的学习中，我们了解到数据是有类型的，目前的学习我们主要接触三类数据类型。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>描述</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>string</td>
<td>字符串类型</td>
<td>有引号引起来的数据都是字符串</td>
</tr>
<tr>
<td>int</td>
<td>整型（有符号）</td>
<td>数字类型，存放整数 如-1，10,20,0等</td>
</tr>
<tr>
<td>float</td>
<td>浮点型（有符号）</td>
<td>数字类型，存放小数 如1.3，-3.4,20.24等</td>
</tr>
</tbody></table>
</li>
<li><p>那么问题来了，怎么判断数据的类型呢？这里我们有三种方法：</p>
<ol>
<li>在print语句中，直接输出类型信息。</li>
<li>用变量存储type()的结果（返回值）。</li>
<li>使用type()语句查看变量中存储的数据类型。<ul>
<li><strong>这里要注意，变量是没有类型的，我们查看的是变量存储的数据类型</strong></li>
</ul>
</li>
</ol>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1.在print语句中，直接输出类型信息(方法1)</span><br><span class="line"></span><br><span class="line"># 打印字符串 &quot;hello，world&quot; 的数据类型</span><br><span class="line">print(type(&quot;hello，world&quot;))  # 输出: &lt;class &#x27;str&#x27;&gt;</span><br><span class="line"># 打印整数 2024 的数据类型</span><br><span class="line">print(type(2024))  # 输出: &lt;class &#x27;int&#x27;&gt;</span><br><span class="line"># 打印浮点数 20.24 的数据类型</span><br><span class="line">print(type(20.24))  # 输出: &lt;class &#x27;float&#x27;&gt;</span><br><span class="line"></span><br><span class="line"># 2.用变量存储type()的结果(方法2)</span><br><span class="line"></span><br><span class="line"># 获取字符串 &quot;hello world&quot; 的数据类型</span><br><span class="line">A = type(&quot;hello world&quot;)</span><br><span class="line"># 获取整数 2024 的数据类型</span><br><span class="line">B = type(2024)</span><br><span class="line"># 获取浮点数 20.24 的数据类型</span><br><span class="line">C = type(20.24)</span><br><span class="line"># 打印字符串 &quot;hello world&quot; 的数据类型，结果将是 &lt;class &#x27;str&#x27;&gt;</span><br><span class="line">print(A)</span><br><span class="line"># 打印整数 2024 的数据类型，结果将是 &lt;class &#x27;int&#x27;&gt;</span><br><span class="line">print(B)</span><br><span class="line"># 打印浮点数 20.24 的数据类型，结果将是 &lt;class &#x27;float&#x27;&gt;</span><br><span class="line">print(C)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 3.使用type()语句查看变量中存储的数据类型(方法3)</span><br><span class="line">D = &quot;hello world&quot;  # 定义一个字符串变量D</span><br><span class="line">F = type(D)  # 获取变量D的数据类型并赋值给变量F</span><br><span class="line">print(F)  # 打印变量F，即变量D的数据类型&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure>

<h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><p>在特定场景下，数据类型之间是可以相互转换的，如字符串转数字，数字转字符串等。</p>
<ol>
<li><p>为什么要进行数据转换？</p>
<ul>
<li>从文件中读取的数字，默认是字符串，我们需要转换成数字类型</li>
<li>后续学习的input()语句，默认结果是字符串，若需要数字也需要转换</li>
<li>将数字转换成字符串用以写出到外部系统</li>
<li>等等</li>
</ul>
</li>
<li><p>示例代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 示例代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换为整数</span></span><br><span class="line">string_number = <span class="string">&quot;2024&quot;</span></span><br><span class="line">integer_number = <span class="built_in">int</span>(string_number)</span><br><span class="line"><span class="built_in">print</span>(integer_number)  <span class="comment"># 输出: 2024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换为浮点数</span></span><br><span class="line">string_float = <span class="string">&quot;20.24&quot;</span></span><br><span class="line">float_number = <span class="built_in">float</span>(string_float)</span><br><span class="line"><span class="built_in">print</span>(float_number)  <span class="comment"># 输出: 20.24</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将整数转换为字符串</span></span><br><span class="line">int_number = <span class="number">2024</span></span><br><span class="line">string_from_int = <span class="built_in">str</span>(int_number)</span><br><span class="line"><span class="built_in">print</span>(string_from_int)  <span class="comment"># 输出: &quot;2024&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将浮点数转换为字符串</span></span><br><span class="line">float_number = <span class="number">20.24</span></span><br><span class="line">string_from_float = <span class="built_in">str</span>(float_number)</span><br><span class="line"><span class="built_in">print</span>(string_from_float)  <span class="comment"># 输出: &quot;20.24&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：浮点数转整数丢失精度</span></span><br><span class="line">float_number = <span class="number">20.74</span></span><br><span class="line">int_from_float = <span class="built_in">int</span>(float_number)</span><br><span class="line"><span class="built_in">print</span>(int_from_float)  <span class="comment"># 输出: 20，小数部分丢失</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>常见的转换语句</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>语句（函数）</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>int(x)</td>
<td>将x转换为一个整数</td>
</tr>
<tr>
<td>float(x)</td>
<td>将x转换为一个浮点数</td>
</tr>
<tr>
<td>str(x)</td>
<td>将x转换为字符串</td>
</tr>
</tbody></table>
<ol start="3">
<li>注意事项<ul>
<li>任何数据类型都可以转字符串</li>
<li>字符串内必须有数字才能转换为数字</li>
<li>浮点数转整数会丢失精度（小数部分）<br>和前面学习的type()一样，这三个语句是带有结果的（返回值），我们可以直接print输出结果或者用变量储存结果值。</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><ol>
<li>在python程序中，我们会给很多东西取名字，如<ul>
<li>变量的名字</li>
<li>方法的名字</li>
<li>类的名字<br>等等，这些名字统一称之为标识符，用来做内容的标识。</li>
</ul>
</li>
<li>标识符内容限定：只允许出现英文、数字、中文、下滑新（_）,其余任何元素都不被允许。</li>
<li>命名规则（强制）<ul>
<li>不推荐使用中文（中文支持并不完善，可能会有隐藏问题）</li>
<li>数字不可以用作开头（硬性限制）</li>
<li>区分大小写</li>
<li>不可使用关键字，如False、True、and、in<br> is等等（同样区分大小写）</li>
</ul>
</li>
<li>命名规范（不强制）<ul>
<li>变量<ol>
<li>有意义：变量名应该清晰地表达变量的用途或它所代表的数据类型。</li>
<li>简洁：在表达清晰的前提下，使用最少的名字长度。</li>
<li>下划线命名法：多个单词组合变量名，要使用下划线分割。</li>
<li>英文字母全部小写。</li>
</ol>
</li>
</ul>
</li>
<li><strong>请注意，不遵守命名规则会导致错误，而不遵守命名规范虽然不会引起错误，但会使代码的可读性和整洁度降低。</strong><br>下面是一份正确和错误的示例<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 错误示例</span></span><br><span class="line">1_name = <span class="string">&quot;老赵&quot;</span></span><br><span class="line">name_! = <span class="string">&quot;老李&quot;</span></span><br><span class="line"><span class="keyword">class</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> = <span class="number">1</span></span><br><span class="line"><span class="comment"># 正确示例</span></span><br><span class="line">name_ = <span class="string">&quot;老王&quot;</span></span><br><span class="line">_name = <span class="string">&quot;老孙&quot;</span></span><br><span class="line">_Name = <span class="string">&quot;老钱&quot;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><ol>
<li>算数运算符<br>在python中，常用的数学运算符包括以下七种<table>
<thead>
<tr>
<th>序号</th>
<th>运算符</th>
<th>描述</th>
<th>示例</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td><code>+</code></td>
<td>加法</td>
<td><code>5 + 3</code></td>
<td>8</td>
</tr>
</tbody></table>
</li>
</ol>
<p>| 2    | <code>-</code>    | 减法           | <code>5 - 3</code>       | 2      |<br>| 3    | <code>*</code>    | 乘法           | <code>5 * 3</code>       | 15     |<br>| 4    | <code>/</code>    | 除法           | <code>5 / 3</code>       | 1.666… |<br>| 5    | <code>%</code>    | 求余数         | <code>5 % 3</code>       | 2      |<br>| 6    | <code>**</code>   | 幂运算         | <code>5 ** 3</code>      | 125    |<br>| 7    | <code>//</code>   | 整除           | <code>5 // 3</code>      | 1      |</p>
<ol start="2">
<li>赋值运算符<br>在Python中，赋值运算符用于将值赋给变量。基本的赋值运算符是 &#x3D;。<br>此外，还有一些复合赋值运算符，它们结合了数学运算和赋值操作。  <table>
<thead>
<tr>
<th>序号</th>
<th>运算符</th>
<th>描述</th>
<th>示例代码</th>
<th>等效于</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td><code>=</code></td>
<td>基本赋值</td>
<td><code>x = 5</code></td>
<td><code>x = 5</code></td>
</tr>
</tbody></table>
</li>
</ol>
<p>| 2    | <code>+=</code>   | 加法赋值       | <code>x += 3</code>                  | <code>x = x + 3</code>             |<br>| 3    | <code>-=</code>   | 减法赋值       | <code>x -= 3</code>                  | <code>x = x - 3</code>             |<br>| 4    | <code>*=</code>   | 乘法赋值       | <code>x *= 3</code>                  | <code>x = x * 3</code>             |<br>| 5    | <code>/=</code>   | 除法赋值       | <code>x /= 3</code>                  | <code>x = x / 3</code>             |<br>| 6    | <code>%=</code>   | 取模赋值       | <code>x %= 3</code>                  | <code>x = x % 3</code>             |<br>| 7    | <code>**=</code>  | 幂运算赋值     | <code>x **= 3</code>                 | <code>x = x ** 3</code>            |<br>| 8    | <code>//=</code>  | 整除赋值      | <code>x //= 3</code>                 | <code>x = x // 3</code>            |</p>
<p>示例代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 数学运算符</span><br><span class="line">print(&quot;5+5=&quot;,5 + 5)</span><br><span class="line">print(&quot;5-5=&quot;,5 - 5)</span><br><span class="line">print(&quot;5*5=&quot;,5 * 5)</span><br><span class="line">print(&quot;5/5=&quot;,5 / 5)</span><br><span class="line">print(&quot;5%5=&quot;,5 % 5)</span><br><span class="line">print(&quot;5//5=&quot;,5//5)</span><br><span class="line"></span><br><span class="line"># 赋值运算符</span><br><span class="line">num = 1 + 2 * 4</span><br><span class="line">print(num) # 输出；9</span><br><span class="line"></span><br><span class="line"># 复合赋值运算符</span><br><span class="line"></span><br><span class="line"># 基本赋值</span><br><span class="line">x = 5</span><br><span class="line">print(x)  # 输出: 5</span><br><span class="line"></span><br><span class="line"># 加法赋值</span><br><span class="line">x += 3</span><br><span class="line">print(x)  # 输出: 8</span><br><span class="line"></span><br><span class="line"># 减法赋值</span><br><span class="line">x -= 2</span><br><span class="line">print(x)  # 输出: 6</span><br><span class="line"></span><br><span class="line"># 乘法赋值</span><br><span class="line">x *= 4</span><br><span class="line">print(x)  # 输出: 24</span><br><span class="line"></span><br><span class="line"># 除法赋值</span><br><span class="line">x /= 3</span><br><span class="line">print(x)  # 输出: 8.0</span><br><span class="line"></span><br><span class="line"># 取模赋值</span><br><span class="line">x %= 5</span><br><span class="line">print(x)  # 输出: 3</span><br><span class="line"></span><br><span class="line"># 幂运算赋值</span><br><span class="line">x **= 2</span><br><span class="line">print(x)  # 输出: 9</span><br><span class="line"></span><br><span class="line"># 整除赋值</span><br><span class="line">x //= 2</span><br><span class="line">print(x)  # 输出: 4.0</span><br></pre></td></tr></table></figure>

<h4 id="字符串拓展内容"><a href="#字符串拓展内容" class="headerlink" title="字符串拓展内容"></a>字符串拓展内容</h4><h5 id="字符串三种定义方式"><a href="#字符串三种定义方式" class="headerlink" title="字符串三种定义方式"></a>字符串三种定义方式</h5><ol>
<li>在Python编程语言中，我们通常认为用双引号（” “）包围的字符序列是字符串。然而，为了更精确地表达，我们应当注意到，实际上，无论是单引号（’ ‘）、双引号（” “）、还是三引号（””” “”” 或 ‘’’ ‘’’）包围的字符序列，都可以被视为字符串。</li>
</ol>
<p>例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 单引号定义法</span></span><br><span class="line">name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#双引号定义法</span></span><br><span class="line">name = <span class="string">&quot;李四&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 三引号定义法（可以像注释一样可以换行）</span></span><br><span class="line">name = <span class="string">&quot;&quot;&quot;这里的文字可以换行，比如这是第一行</span></span><br><span class="line"><span class="string">这是第二行</span></span><br><span class="line"><span class="string">这是第三行</span></span><br><span class="line"><span class="string">在终端中他们分别占据一行</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure>

<p>在终端中他们应该这样显示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">张三</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">李四</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line">这里的文字可以换行，比如这是第一行</span><br><span class="line">这是第二行</span><br><span class="line">这是第三行</span><br><span class="line">在终端中他们分别占据一行</span><br></pre></td></tr></table></figure>

<ul>
<li><p>那么就出现了一个问题， 如果<strong>要定义的字符串本身包括单引号或者双引号</strong>，怎么办呢？</p>
<ol>
<li>使用不同类型的引号：如果字符串本身包含单引号，可以使用双引号来定义字符串；反之亦然。</li>
</ol>
<ul>
<li><p>示例代码</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&#x27;&quot;张三&quot;&#x27;</span></span><br><span class="line">name_1 = <span class="string">&quot;&#x27;李四&#x27;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name,name_1,)</span><br></pre></td></tr></table></figure>
</li>
<li><p>结果应该是：</p>
</li>
</ul>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;张三&quot;</span> <span class="string">&#x27;李四&#x27;</span> </span><br></pre></td></tr></table></figure>

<ol start="2">
<li>转义字符：在字符串中，可以通过在引号前加上反斜杠 <strong>()</strong> 来转义引号，使其成为普通字符。</li>
</ol>
<ul>
<li>例如打印如下文本：</li>
</ul>
<blockquote>
<p>Mao Zedong said: “The world is yours, as well as ours, but in the final analysis, it is yours. You young people are full of vigor and vitality, like the sun at eight or nine o’clock in the morning. The hope is placed upon you.”</p>
</blockquote>
<ul>
<li>示例代码</li>
</ul>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Mao Zedong said: &quot;The world is yours, as well as ours, but in the final analysis, it is yours. You young people are full of vigor and vitality, like the sun at eight or nine o\&#x27;clock in the morning. The hope is placed upon you.&quot;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>  这里在o’clock的引号前加了一个 *<em>*</em> 把单引号变成普通字符，输出结果应该是</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Mao Zedong said: <span class="string">&quot;The world is yours, as well as ours, but in the final analysis, it is yours. You young people are full of vigor and vitality, like the sun at eight or nine o&#x27;clock in the morning. The hope is placed upon you.&quot;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>1957年11月，毛泽东同志在莫斯科大学发表“希望寄托在你们身上”著名讲话：<br>毛泽东说：“世界是你们的，也是我们的，但是归根结底是你们的。你们青年人朝气蓬勃，正在兴旺时期，好像早晨八九点钟的太阳。希望寄托在你们身上。”<br>Mao Zedong said: “The world is yours, as well as ours, but in the final analysis, it is yours. You young people are full of vigor and vitality, like the sun at eight or nine o’clock in the morning. The hope is placed upon you.”<br>来自<a href="https://www.youth.cn/">https://www.youth.cn</a></p>
</blockquote>
<p>2.总结<br>    1.字符串的三种定义方式：<br>    - 单引号方式<br>    - 双引号方式<br>    - 三引号方式<br>    2. 引号的嵌套<br>        - 可以使用：\来进行转义<br>         - 单引号内可以写双引号或双引号内可以写单引号</p>
<h5 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h5><ol>
<li>如果我们有两个字符串（文本）字面量，可以将其拼接成一个字符串，通过+号即可完成，如</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>（<span class="string">&quot;abc&quot;</span>+<span class="string">&quot;def&quot;</span>）</span><br></pre></td></tr></table></figure>

<p>输出结果应该是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">abcdef</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>不过一般，单纯的2个字符串字面量进行拼接没什么意义，字面量和变量或变量和变量之间才会使用拼接，如：</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = <span class="string">&quot;libai&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;my name is &quot;</span> + A)</span><br></pre></td></tr></table></figure>
<p>输出结果应该是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my name <span class="keyword">is</span> libai</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>要注意，拼接操作无法和非字符串类型进行拼接。</li>
</ol>
<h5 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h5><ul>
<li><p>在频繁使用字符串拼接的过程中，我们可能会遇到一些不便：</p>
<ol>
<li>当涉及的变量数量增多时，进行字符串拼接变得繁琐且容易出错。</li>
<li>直接将字符串与其他数据类型（如数字）拼接时，会遇到类型不匹配的问题。</li>
</ol>
</li>
<li><p>这里我们用另一种方法，使用”%s”。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我今天上了%s节课&quot;</span> % <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello%s&quot;</span> % <span class="string">&quot;world&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%s年,%s专业平均月工资是%s&quot;</span> %(<span class="number">2024</span>,<span class="string">&quot;计算机&quot;</span>,<span class="string">&quot;八万&quot;</span>))</span><br></pre></td></tr></table></figure>
<p>结果应该是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">我今天上了<span class="number">10</span>节课</span><br><span class="line">helloworld</span><br><span class="line"><span class="number">2024</span>年,计算机专业平均月工资是八万</span><br></pre></td></tr></table></figure></li>
<li><p>另外，我们也有其他的数据类型占位符，下面是一些常用的占位符，使用方法和%s一致。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>格式符号</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>%s</td>
<td>将内容转换成字符串，放入占位位置</td>
</tr>
<tr>
<td>%d</td>
<td>将内容转换成整数，放入占位位置</td>
</tr>
<tr>
<td>%f</td>
<td>将内容转换成浮点型，放入占位位置</td>
</tr>
</tbody></table>
<h5 id="掌握格式化字符串的过程中做数字的精度控制"><a href="#掌握格式化字符串的过程中做数字的精度控制" class="headerlink" title="掌握格式化字符串的过程中做数字的精度控制"></a>掌握格式化字符串的过程中做数字的精度控制</h5><ul>
<li><p>我们可以使用辅助符号”m.n”来控制数据的宽度和精度</p>
<ul>
<li>m，控制宽度，要求是数字（很少使用），设置的宽度小于数字自身，不生效</li>
<li>n，控制小数点精度，要求是数字，会进行小数的四舍五入</li>
</ul>
</li>
<li><p>m和n均可省略</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num1 = <span class="number">23</span></span><br><span class="line">num2 = <span class="number">22.25</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;今天我吃了%5d顿饭&quot;</span> % num1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;今天我花了%32.2f元&quot;</span> % num2)</span><br></pre></td></tr></table></figure>
<p>结果是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">今天我吃了   <span class="number">23</span>顿饭</span><br><span class="line">今天我花了                           <span class="number">22.25</span>元</span><br></pre></td></tr></table></figure>
<p>这里有空格的原因是：num2不足32位，用空格补全。</p>
</li>
</ul>
<h5 id="字符串格式化方式2"><a href="#字符串格式化方式2" class="headerlink" title="字符串格式化方式2"></a>字符串格式化方式2</h5><ul>
<li>确实，使用 % 符号进行字符串格式化既方便又灵活，它还允许我们控制输出的精度。不过，除了这种方法，还有其他几种格式化字符串的方式可以考虑：<ul>
<li>通过 <strong>f”内容{变量}”</strong> 来实现</li>
</ul>
</li>
<li>这种方式有两个特点<ul>
<li>不做精度控制</li>
<li>不限数据类型</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num1 = <span class="number">23</span></span><br><span class="line">num2 = <span class="number">22.25</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;今天我吃了<span class="subst">&#123;num1&#125;</span>顿饭&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;今天我花了<span class="subst">&#123;num2&#125;</span>元&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>结果应该是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">今天我吃了23顿饭</span><br><span class="line">今天我花了22.25元</span><br></pre></td></tr></table></figure>
<h5 id="对表达式进行格式化"><a href="#对表达式进行格式化" class="headerlink" title="对表达式进行格式化"></a>对表达式进行格式化</h5><ol>
<li>表达式定义：表达式：一条具有明确执行结果的代码语句。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1*1的结果是%d&quot;</span> % (<span class="number">1</span>*<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;1*1的结果是<span class="subst">&#123;<span class="number">1</span>*<span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;字符串在Python中的类型名是：%s&quot;</span> % <span class="built_in">type</span>(<span class="string">&quot;字符串&quot;</span>))</span><br></pre></td></tr></table></figure>
<p>结果是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1*1的结果是1</span><br><span class="line">1*1的结果是1</span><br><span class="line">字符串在Python中的类型名是：&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure>
<h4 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h4>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>password-generator(密码生成器)</title>
    <url>/2024/09/19/password-generator/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>请注意：在本博客网站上，所有标注有“AI编程”标签(或分类)的文章，其源代码都不同程度地使用了人工智能技术。</p>
</blockquote>
<p>在这个信息迅速膨胀的时代，人工智能（AI）的重要性在众多领域和层面上日益凸显，标志着我们正处于一场技术革命的浪潮之中。</p>
<p>AI的融入使得编程的门槛大大降低，即便是编程新手也能轻松体验编程带来的乐趣和成就感。</p>
<p>在一些特定任务上，AI的能力已经超越了人类，特别是在进行大规模代码生成时，AI展现出的速度和精确度是人类难以企及的。以往，我们面对难题时可能会寻求教师或专家的指导；而现在，AI成为了我们新的智能顾问和合作伙伴。</p>
<p>这个程序的创造是出于纯粹的兴趣驱动。我之所以选择了人工智能（AI）编程，是因为我目前还没有涉足Python的学习，毕竟我的专业领域并不在计算机科学。</p>
<h1 id="password-generator"><a href="#password-generator" class="headerlink" title="password-generator"></a>password-generator</h1><ul>
<li>一个使用python语言开发的、简易小巧的密码生成器。</li>
<li>password-generator分为两个版本<ul>
<li>web版功能简单，使用方便</li>
<li>pc版有备份功能，磁盘占用小</li>
</ul>
</li>
</ul>
<h2 id="password-generator（web）"><a href="#password-generator（web）" class="headerlink" title="password-generator（web）"></a>password-generator（web）</h2><h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><ul>
<li>github开源地址: <a href="https://github.com/BAILANDE/Password-generator">https://github.com/BAILANDE/Password-generator</a></li>
<li>如需使用请移步password-generator主站（由于浏览器的安全设置或页面的权限策略可能导致“复制密码”按钮无法复制，手动复制还是可以的）</li>
<li>演示网站1 <a href="https://password-generator.dingview.top/">https://password-generator.dingview.top/</a></li>
<li>演示网站2 <a href="https://password-generator-git-main-dings-projects-ba804e9a.vercel.app/">https://password-generator-git-main-dings-projects-ba804e9a.vercel.app/</a></li>
</ul>
<h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><ol>
<li><p>这个密码生成器的基本功能包括：</p>
<ul>
<li><p>输入密码名称：用户可以输入想要的密码名称，以便在复制时使用。</p>
</li>
<li><p>选择密码长度：用户可以设置生成密码的长度。</p>
</li>
</ul>
</li>
<li><p>选择字符类型：</p>
<ul>
<li>小写字母</li>
<li>大写字母</li>
<li>数字</li>
<li>特殊符号 用户可以勾选或取消勾选这些选项，以定制生成的密码。</li>
<li>生成密码：点击“生成密码”按钮后，系统会根据用户的设置随机生成一个符合要求的密码，并显示在界面上。</li>
</ul>
</li>
<li><p>复制密码：用户可以点击“复制密码”按钮，将生成的密码和密码名称以Markdown格式复制到剪贴板，方便后续使用。</p>
</li>
<li><p>提示信息：在密码复制成功或失败时，会显示提示信息，告知用户操作结果。</p>
</li>
</ol>
<iframe src="https://password-generator.dingview.top/" scrolling="no" border="0" frameborder="yes" framespacing="0" allowfullscreen="true"width="100%" height=550 ></iframe>

<h2 id="password-generator（PC）"><a href="#password-generator（PC）" class="headerlink" title="password-generator（PC）"></a>password-generator（PC）</h2><h3 id="下载地址（附源代码）"><a href="#下载地址（附源代码）" class="headerlink" title="下载地址（附源代码）"></a>下载地址（附源代码）</h3><ul>
<li>github地址：<a href="https://github.com/BAILANDE/Password-generator-pc">https://github.com/BAILANDE/Password-generator-pc</a></li>
<li>其他下载地址：<ul>
<li>蓝奏云：<a href="https://wweo.lanzouj.com/iOLh62al7w4h">点击跳转</a> 密码:2iki</li>
</ul>
</li>
</ul>
<h3 id="基本功能-1"><a href="#基本功能-1" class="headerlink" title="基本功能"></a>基本功能</h3><ul>
<li>与web版基本一致，只有以下两点差别：<ul>
<li>多了中文汉字和泰语字符选项（为了增加密码强度）</li>
<li>有备份至github功能</li>
</ul>
</li>
</ul>
<h3 id="演示与使用教程"><a href="#演示与使用教程" class="headerlink" title="演示与使用教程"></a>演示与使用教程</h3><h4 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示<a href="https://www.bilibili.com/video/BV17xtDeKEHL?t=1.2">视频</a></h4><div class="video-container">
  <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113180172880974&bvid=BV17xtDeKEHL&cid=25958483948&p=1&autoplay=0&muted=1" allowfullscreen></iframe>
</div>

<h4 id="图片教程"><a href="#图片教程" class="headerlink" title="图片教程"></a>图片教程</h4><blockquote>
<p>使用备份功能首先需要一个GitHub账户，注册过程非常简单。如果遇到访问困难，可以尝试使用Watt Toolkit加速器来解决。点击<a href="https://steampp.net/">这里访问Watt Toolkit官网</a>。<br><a href="https://github.com/">点击这里跳转github官网</a></p>
</blockquote>
<ul>
<li>教程开始<br><img src="/password_generator/1.png" alt="1"><br><img src="/password_generator/2.png" alt="1"><br><img src="/password_generator/3.png" alt="1"><br><img src="/password_generator/4.png" alt="1"><br><img src="/password_generator/5.png" alt="1"><br><img src="/password_generator/6.png" alt="1"><br><img src="/password_generator/7.png" alt="1"><br><img src="/password_generator/8.png" alt="1"><br><img src="/password_generator/9.png" alt="1"><br><img src="/password_generator/10.png" alt="1"><br><img src="/password_generator/11.png" alt="1"><br><img src="/password_generator/12.png" alt="1"><br><img src="/password_generator/13.png" alt="1"><br><img src="/password_generator/14.png" alt="1"><br><img src="/password_generator/15.png" alt="1"><br><img src="/password_generator/16.png" alt="1"><br><img src="/password_generator/17.png" alt="1"><br><img src="/password_generator/18.png" alt="1"><br><img src="/password_generator/19.png" alt="1"><br><img src="/password_generator/20.png" alt="1"></li>
</ul>
<p><a href="/password_generator/password_generator.pdf" target="_blank">点击下载PDF文件</a></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><ul>
<li>在实际操作过程中，对于像我这样不熟悉Python的人来说，代码编写并不是最大的挑战，因为kimi和gpt的高效能力大大节省了我们的时间。然而，在打包过程中，我遇到了一些琐碎的问题。尽管如此，我也并没有花费太多时间就成功解决了这些问题。 </li>
<li>AI的能力确实令人印象深刻，但要正确并有效地利用它，持续学习是必不可少的。</li>
</ul>
]]></content>
      <categories>
        <category>AI编程</category>
      </categories>
      <tags>
        <tag>AI编程</tag>
      </tags>
  </entry>
  <entry>
    <title>名言收录</title>
    <url>/2024/10/06/%E5%90%8D%E8%A8%80%E6%94%B6%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="名言收录"><a href="#名言收录" class="headerlink" title="名言收录"></a>名言收录</h1><blockquote>
<p>这篇文章的收录始于2024年10月6日。对于那些作者身份不明的名言，我们以“佚名”来代替，以示尊重和纪念那些无名的智慧贡献者。<br>本文章会持续更新。<br>当然，对于这些名言，我没有意图去对它们进行分类，仅仅是在阅读时记录下来。</p>
</blockquote>
<ol>
<li><p>“世界是你们的，也是我们的，但是归根结底是你们的。你们青年人朝气蓬勃，正在兴旺时期，好像早晨八九点钟的太阳。希望寄托在你们身上。” <strong>————毛泽东</strong></p>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>《应用文写作》笔记</title>
    <url>/2024/08/27/%E5%BA%94%E7%94%A8%E6%96%87%E5%86%99%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="《应用文写作》笔记"><a href="#《应用文写作》笔记" class="headerlink" title="《应用文写作》笔记"></a>《应用文写作》笔记</h1><h2 id="应用文的整体认知"><a href="#应用文的整体认知" class="headerlink" title="应用文的整体认知"></a>应用文的整体认知</h2><blockquote>
<p>前言：本文是由Ding在大学课程“应用文写作”一课整理的笔记，内容包括老师板书、教材资料和互联网资料（如有侵权请联系作者在24小时内删除），<strong>仅供参考</strong>。如有错误请在首页（关于页、评论区）联系作者指出。</p>
</blockquote>
<h3 id="文体知识"><a href="#文体知识" class="headerlink" title="文体知识"></a>文体知识</h3><ol>
<li>一般文章类：记叙文、议论文、说明文。</li>
<li>文学作品类：诗歌、散文、小说、戏剧。</li>
<li>应用(实用)文类：日用文、专用文。</li>
</ol>
<h3 id="应用问的产生和发展"><a href="#应用问的产生和发展" class="headerlink" title="应用问的产生和发展"></a>应用问的产生和发展</h3><ul>
<li><strong>产生</strong><ol>
<li>仓颉造字，以代结绳。</li>
<li>我国最早的文章是应用文</li>
<li>最早的应用文是“<a href="https://baike.baidu.com/item/%E7%94%B2%E9%AA%A8%E5%8D%9C%E8%BE%9E/1778149">甲骨卜辞</a>”</li>
<li>我国最早的应用文集是《<a href="https://baike.baidu.com/item/%E5%B0%9A%E4%B9%A6/6297">尚书</a>》</li>
<li>第一个把应用文作为文体提出的是清代的<a href="https://baike.baidu.com/item/%E5%B0%9A%E4%B9%A6/6297">刘熙载</a>。</li>
</ol>
</li>
<li><strong>发展</strong><ol>
<li>*<strong>先秦</strong>；萌芽期</li>
<li><strong>秦——清</strong>；形成发展期</li>
<li><strong>清后</strong>；繁荣期</li>
</ol>
</li>
</ul>
<h3 id="应用文特点"><a href="#应用文特点" class="headerlink" title="应用文特点"></a>应用文特点</h3><ul>
<li><strong>实用性</strong></li>
<li><strong>规范性(格式性)</strong></li>
<li><strong>真实性</strong></li>
<li><strong>时效性</strong></li>
<li><strong>广泛性</strong></li>
<li><strong>确定性(对象)</strong></li>
</ul>
<h3 id="应用文种类"><a href="#应用文种类" class="headerlink" title="应用文种类"></a>应用文种类</h3><ol>
<li>公文类</li>
<li>事务文书</li>
<li>经济文书</li>
<li>职场文书</li>
<li>科技文书</li>
<li>宣传文书</li>
<li>法律文书</li>
</ol>
<h3 id="应用文种类-1"><a href="#应用文种类-1" class="headerlink" title="应用文种类"></a>应用文种类</h3><ol>
<li>主旨(鲜明，集中)</li>
<li>材料(真实，典型)</li>
<li>结构(严谨，完整)</li>
<li>语言(简明，朴实，庄重)</li>
</ol>
<h3 id="应用文表达方式"><a href="#应用文表达方式" class="headerlink" title="应用文表达方式"></a>应用文表达方式</h3><ul>
<li><strong>记叙</strong></li>
<li><strong>描写</strong></li>
<li><strong>说明</strong></li>
<li><strong>议论</strong></li>
<li><strong>抒情</strong></li>
</ul>
<h3 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h3><ol>
<li><a href="https://baike.baidu.com/item/%E6%B1%89%E5%AD%97%E9%80%A0%E5%AD%97%E6%B3%95?fromModule=lemma_search-box">汉字造字法</a><ul>
<li>象形法</li>
<li>指事法</li>
<li>会意法</li>
<li>形声法</li>
<li>转注法(辅助)</li>
<li>假借法(辅助)</li>
</ul>
</li>
<li><a href="https://baike.baidu.com/item/%E6%B1%89%E5%AD%97%E5%8F%91%E5%B1%95%E5%8F%B2/296648">汉字发展历程</a><ul>
<li>甲骨文（商）→金文（周）→大篆(秦)→小篆（秦）→隶书（汉）→楷书（魏晋）→行书。</li>
</ul>
</li>
</ol>
<h2 id="事务文书写作"><a href="#事务文书写作" class="headerlink" title="事务文书写作"></a><a href="https://baike.baidu.com/item/%E4%BA%8B%E5%8A%A1%E6%96%87%E4%B9%A6/7105361">事务文书</a>写作</h2><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><ol>
<li>计划的别称：规划、设想、要求、纲要、方案、安排、打算</li>
<li>特点<ul>
<li>预见性</li>
<li>针对性</li>
<li>可行性</li>
<li>约束性</li>
</ul>
</li>
<li>三要素：目标、措施、步骤</li>
<li>写法<ul>
<li>标题：单位（个人）名称+时限+内容+文种 <blockquote>
<p>例：《清华大学2015年度工作计划》</p>
</blockquote>
</li>
<li>正文：<ul>
<li>前言：目的、依据、指导思想、任务要求。</li>
<li>主体：做什么——怎么做——什么时候完成<ul>
<li>目标任务：做什么（明确）</li>
<li>方法实施：怎么做（具体）</li>
<li>时间步骤：什么时候完成（清楚）</li>
</ul>
</li>
<li>结尾：希望、要求</li>
</ul>
</li>
<li>落款：单位（个人）名称+日期</li>
</ul>
</li>
</ol>
<blockquote>
<p>如果说要策划一场活动，那么应该包括以下几点：</p>
<ol>
<li>活动名称</li>
<li>活动主题</li>
<li>活动时间、地点</li>
<li>活动内容</li>
<li>活动形式</li>
<li>活动参加人员负责人</li>
<li>活动经费来源、预算 </li>
<li>策划单位、日期</li>
</ol>
</blockquote>
<ol start="5">
<li>作业：写一份活动策划方案（内容不限）,要求内容清晰层析，层次分明，结构完整。<blockquote>
<p>示例(仅供参考)<img src="/img/%E6%B4%BB%E5%8A%A8%E7%AD%96%E5%88%92%E6%96%B9%E6%A1%88.png" alt="勇攀高峰”——XX 大学秋季爬山活动详细策划案"></p>
</blockquote>
</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol>
<li>定义：对过去工作的回顾、分析、评定</li>
<li>特点：<ul>
<li>自我性</li>
<li>概括性</li>
<li>实践性</li>
</ul>
</li>
<li>种类<ul>
<li>如果从实际工作的角度看，总结可归结为三大类：一是汇报工作的全面总结，二是介绍经验或揭露问题的专题总结，三是个人的思想、工作、学习总结。如按不同标准可划分以下几类。<ul>
<li><p>按性质分：有全面总结和专题总结。</p>
</li>
<li><p>按内容分：有工作总结、学习总结、思想总结、事故总结、活动总结等。</p>
</li>
<li><p>按时间分：有年度总结、季度总结、月份总结等。</p>
</li>
<li><p>按范围分：有个人总结、班组总结、单位总结、部门总结、地区总结等。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>总结的写法<ul>
<li>总结的格式与计划相同，都由标题、正文、落款三部分构成。<ul>
<li>标题：总结的标题有公文式标题、文章式标题或双标题</li>
<li>正文：<ul>
<li>前言部分：一般应简单概述总结的内容、背景、目的等。常见的开头方式有概述式、提示式、结论式、问题式。</li>
<li>主体部分：总结主体部分的结构形式主要有条目式、三段式、分块式、漫谈式。</li>
<li>结尾部分：总结的结尾简单写写存在的主要问题，表一下决心，或展望前景，说明今后的打算与设想。</li>
</ul>
</li>
<li>落款：在正文右下方署名，单位总结一般名称在标题中出现，文尾可不写。日期写在署名下。</li>
</ul>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>总结写作要求： </p>
<ol>
<li>态度要端正，内容要真实<br>  总结的目的是要从对过去的工作回顾与思考中，寻找成功的经验和失败的教训，以指导今后的工作，因此，应当客观、全面、辩证地分析事物，从中得出科学的结论。切不可喜功好大，言过其实，弄虚作假。</li>
<li>重点要突出，点面要结合<br>  总结必须占有充足的材料，才能使内容充实，但不能像“流水账”那样，罗列现象，没有重点。总结要突出重点内容，有点有面，点面结合才具有说服力。</li>
<li>思路要清晰，层次要分明<br>  总结一般较长，因此必须思路清晰，最好有一根主线贯穿全文，让人把握核心。层次也要分明，不可一塌糊涂。</li>
</ol>
</blockquote>
<h2 id="职场文书"><a href="#职场文书" class="headerlink" title="职场文书"></a>职场文书</h2><p>随着我国市场经济的不断发展与完善，我国的就业方式已由过去的单向选择转变为目前的单位与职工都有的双向选择。大中专毕业生或待业人员在寻找职业时，就需要求职类的应用文。随着社会竞争的日趋激烈，人们在工作中面临着竞岗和离岗等考验，这时也需要就职类应用文。总之，在现代社会写好求职类和就职类应用文是职业人必备的基本功之一。</p>
<h3 id="求职信"><a href="#求职信" class="headerlink" title="求职信"></a>求职信</h3><ol>
<li>在当今人才竞争激烈的社会，大中专毕业生或待业人员，要想赢得就业的机会，就必须善于向用人单位宣传、推荐自己，这就需要撰写求职信、应聘信并附上个人简历、毕业生登记表和有关证件复印件等内容，用人单位通过这些材料，了解求职人的基本情况，在现代社会写好求职信和应聘信是职业人必备的基本功之一。</li>
</ol>
<blockquote>
<p>在这里补充一下书信知识，书信分为一般书信（例如家书、情书）、社交书信（慰问信、祝贺信）、专用书信（介绍信、求职信）。格式一般包括标题、称呼、问候语、正文、祝贺语、署名、日期。<br>区分对联上下联的方法<br>对联是中国传统文化中的一种文学形式，通常由两句话组成，分别称为上联和下联。它们在字数、对仗、意义上都要求相匹配。区分对联的上下联通常有以下几种方法：</p>
<ol>
<li><strong>尾字声调</strong>：在传统的对联中，上联的最后一个字通常是仄声（即第三声或第四声），而下联的最后一个字则是平声（即第一声或第二声）。</li>
<li><strong>时间顺序</strong>：如果对联中涉及到时间的先后，通常时间在前的为上联，时间在后的为下联。</li>
<li><strong>空间顺序</strong>：如果对联中涉及到空间的上下、内外、远近等，通常按照空间的逻辑顺序排列，如从外到内、从上到下等。</li>
<li><strong>逻辑关系</strong>：根据对联的逻辑关系，上联往往是提出问题或者描述现象，下联则是回答问题或者进一步阐释。</li>
<li><strong>字数多少</strong>：在一些对联中，上联的字数可能比下联多，但这并不是一个普遍的规则。</li>
<li><strong>横批</strong>：如果对联有横批，那么横批下的第一个字所在的联就是上联。</li>
<li><strong>张贴位置</strong>：在张贴对联时，上联通常贴在右边（面向门时），下联贴在左边。</li>
<li><strong>内容含义</strong>：有时上联和下联的内容含义也能帮助区分，比如上联可能是一个引子或者背景介绍，下联则是主题或者高潮。</li>
<li><strong>书写习惯</strong>：在书写对联时，上联通常从右往左写，下联从左往右写。</li>
<li><strong>特定场合</strong>：在某些特定的节日或场合，对联的内容和顺序也有特定的规定。<br>通过这些方法，通常可以较为准确地区分对联的上下联。不过，由于对联的创作非常灵活，有时也可能会遇到一些特殊情况，需要结合具体的对联内容和背景来确定。’</li>
</ol>
</blockquote>
<ol start="2">
<li><p>求职信的特点</p>
<ol>
<li>自荐性</li>
<li>针对性</li>
<li>竞争性</li>
</ol>
</li>
<li><p>求职信的写法</p>
<ol>
<li>标题：正中间写“求职信”（或者应聘信、自荐信）</li>
<li>称呼：标题下定格写用人单位或领导名称（例如“XXX公司经理”）</li>
<li>问候语：在第二行空两格写“您好！”</li>
<li>正文：<ol>
<li>开头：写求职信的缘由，目标，自我简介</li>
<li>主体：思想品行，学习能力（主修课程），专业水平，爱好特长、实习情况、获奖情况。</li>
<li>结尾：决心、展望</li>
</ol>
</li>
<li>祝福语：“此致”空两格写，“敬礼”顶格写。</li>
<li>署名、日期：右下角写</li>
<li>附件：个人简历、电话、证书复印件。</li>
</ol>
</li>
</ol>
<h3 id="个人简历"><a href="#个人简历" class="headerlink" title="个人简历"></a>个人简历</h3><blockquote>
<p>随着社会的发展，人事制度的变革，使得职业选择的机会越来越多，范围越来越广，职业变更也越发频繁。在选择或变更职业之前，首先要做好的工作就是准备一份让用人单位产生注意力和发生兴趣，或能够获得人才交流中心人员的信任感或赞赏，从而把你推荐给用人单位的简历。<br>所谓简历，就是对自己的生活经历，包括学历、工作经历及相关成就等，有选择地、重点地加以概括、叙述的一种应用文书，也称个人简历或个人履历书。  有人称简历是职场“敲门砖”，一份妥当的简历，可以引起招聘单位的兴趣，为写作者赢得面试的机会。一般来说，任何一个单位公开招聘，都会收到很多简历，而大多数简历都是大同小异，招聘一方可能会视而不见。因此，简历的好坏是决定求职者能否得到所求职位的第一关。<br>个人简历除具有求职文书功能外，在现代社会，简历是人事档案的重要组成部分，也是考查干部、选拔任用人才等必须具备的一份重要资料。</p>
</blockquote>
<ol>
<li>个人简历的种类<ol>
<li>依据表达方式的不同，个人简历可分为表格式和叙述式。</li>
<li>依据写作顺序的不同，个人简历可分为时间顺序型简历、职能型简历和组合型简历。</li>
</ol>
</li>
<li>个人简历一般具备以下几个特点：<ol>
<li>真实性</li>
<li>目的性   </li>
<li>完整性</li>
<li>简明性</li>
</ol>
</li>
<li>个人简历写法</li>
</ol>
<blockquote>
<p>不同类型的简历，写作格式不尽相同。通常情况下，简历可由标题、正文、落款三个部分组成。</p>
</blockquote>
<ol>
<li>标题<br>个人简历的标题，可以写成个人简历、简历、个人履历书，也可以在它们的前面加上写作者的名字，如：张扬个人简历。</li>
<li>正文<ol>
<li>个人基本情况</li>
<li>学习经历(大学或大专主修课)</li>
<li>工作经历（社团活动、实践学习）</li>
<li>个人技能（专业水平能力、其他能力）</li>
<li>爱好特长</li>
<li>获奖情况</li>
<li>求职意向</li>
<li>自我评定</li>
<li>联系方式<br>3、落款</li>
</ol>
</li>
</ol>
<blockquote>
<p>个人简历的写作要求</p>
<ol>
<li>内容真实客观<br>在简历写作中，个人的基本情况与学习、工作等经历，以及各项优势特长等必须如实记写，绝不能弄虚作假，编造学历、资历来欺骗用人单位。用人单位会层层把关，多方考核。求职者若作假，一旦真相大白，不仅不能被录用，写作者的品质也必将大打折扣。<br>一些人力资源部经理一再告诫大家，求职简历一定要按照实际情况填写，任何虚假的内容都不要写。一位经理说，即使有的人靠含有水分的简历得到了面试的机会，但面试时也会露出马脚。企业选人都非常慎重，自己当年应聘时过了9道关，而弄虚作假是过不了一轮又一轮的面试关的。</li>
<li>突出具体优势<br>写作个人简历，亮出你最吸引人的优点。<br>撰写简历要把握对方为什么要考虑让你到他们公司来担任这个职务?你如何能帮助他们解决问题?也就是要根据求职目标突出自身优势，即完成本职工作所具备的学识、能力、专长或者已取得的成就，并且尽可能用事实和数字加以说明，如在校主修专业课程的成绩、竞赛中获得的奖项、专业实习成绩、工作实践成果等，进而让用人单位清楚地认识你所具备的求职、任职资格。</li>
<li>表述简洁明了<br>作为求职文书使用的个人简历，在写作时应力求简洁明了，没有必要将自己的所有经历都一一地表述出来，篇幅尽量压缩在1～2页纸以内（Ａ4纸），最好1页就能说明问题，关键是要能最大限度地反映出自身所具有的求职优势。</li>
<li>语言文字准确<br>个人简历写作者在表述自己学识、能力、经验时，语言要准确，既不夸大自己的能力，也不必过分自谦，而要实事求是，使人阅后确信所写内容与写作者的实际相符。文字书写要准确，人事部门相关人士会认为写错别字的求职者文化素质不高，或做事马虎大意。<br>每到招聘时，一个企业或单位，尤其是大型企业或单位，每次都会收到很多份简历，工作人员不可能都仔细阅读，一般一份简历只用１分钟就看完了，最多不超过３分钟。</li>
<li>递交简历的技巧<br>在企业招聘会现场给企业递交简历时，要选择人不是很多、很乱时候，要多争取跟用人单位聊聊，增加对方的印象，最好能让对方把你的简历做上重点标注，否则你的简历极有可能被淹没在一堆竞争者的简历中。</li>
</ol>
</blockquote>
<h3 id="竞聘书"><a href="#竞聘书" class="headerlink" title="竞聘书"></a>竞聘书</h3><ol>
<li>竞聘书的含义</li>
</ol>
<ul>
<li>是竞聘者为了实现竞争上岗，在竞聘会议上面对评审者和听众发表</li>
<li>展露自我具有足够条件的专用演说类文书，也叫竞聘演讲稿、竞聘报告或讲话稿。大至竞选总统，小到竞聘上岗，都要用这种讲话稿。在我国，随着竞争上岗的普遍实行，竞聘讲话稿的写作越来越显得重要。</li>
</ul>
<ol start="2">
<li>竞聘书作用</li>
</ol>
<ul>
<li>竞聘书既是竞聘者对自身素质的评价，也是人事部门和群众了解竞聘者情况的渠道。它既为择优选聘提供依据，也有利于竞聘者自身素质的提高，同时也是组织人事部门用以考核干部的重要档案材料。</li>
</ul>
<ol start="3">
<li>竞聘书特点<ul>
<li>明确性</li>
<li>集中性</li>
<li>竞争性</li>
<li>实用性</li>
<li>程序性</li>
<li>准确性</li>
</ul>
</li>
<li>竞聘书写法<ol>
<li>标题<ul>
<li>文种式</li>
<li>公文式</li>
<li>文章式</li>
</ul>
</li>
<li>称呼：评委、听众。</li>
<li>问候语：“大家好！”</li>
<li>正文：<ol>
<li>开头：交代身份、竞聘缘由、目标等<br> 2.主体<ol>
<li>自我简介，包括但不限于年龄、毕业院校、专业、学历、工作经历。</li>
<li>对岗位的认知和理解。</li>
<li>竞聘优势条件：政治素质、业务能力、工作态度。</li>
<li>上岗后的目标和设想。</li>
</ol>
</li>
<li>结尾：态度、展望</li>
</ol>
</li>
<li>结束语：感谢、祝福。</li>
<li>落款：署名和日期。</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>《数控车床与加工工艺》笔记</title>
    <url>/2024/09/04/%E6%95%B0%E6%8E%A7%E8%BD%A6%E5%BA%8A%E4%B8%8E%E5%8A%A0%E5%B7%A5%E5%B7%A5%E8%89%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="数控车床与加工工艺"><a href="#数控车床与加工工艺" class="headerlink" title="数控车床与加工工艺"></a>数控车床与加工工艺</h1><blockquote>
<p>前言：本文是由Ding在大学课程“数控车床与加工工艺”一课整理的笔记，内容包括老师板书、教材资料和互联网资料（如有侵权请联系作者在24小时内删除），<strong>仅供参考</strong>。如有错误请在首页（关于页、评论区）联系作者指出。</p>
</blockquote>
<h2 id="基础认知"><a href="#基础认知" class="headerlink" title="基础认知"></a>基础认知</h2><h3 id="数控车床简述"><a href="#数控车床简述" class="headerlink" title="数控车床简述"></a>数控车床简述</h3><ul>
<li>概述参考<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8E%A7%E8%BD%A6%E5%BA%8A/3205">数控车床（百度百科）</a></li>
</ul>
<h3 id="数控车床型号"><a href="#数控车床型号" class="headerlink" title="数控车床型号"></a>数控车床型号</h3><blockquote>
<p>数控车床型号表示方法遵守GB&#x2F;T15375-2008《金属切削机床 型号编制方法》，由字母及一组数字组成。例如数控车床代号CK6140含义如下:</p>
</blockquote>
<ul>
<li>CK6140<ol>
<li>“C”表示车床</li>
<li>“K”表示数控</li>
<li>“6”表示落地及卧式车床组</li>
<li>“1”表示卧式车床系</li>
<li>“40”表示床身最大回转直径（400mm）的1&#x2F;10</li>
</ol>
</li>
<li>5085<ol>
<li>“50”表示床身最大回转直径（500mm）的1&#x2F;10</li>
<li>“85”表示最大加工长度（850mm）的1&#x2F;10</li>
</ol>
</li>
</ul>
<h3 id="数控机床分类"><a href="#数控机床分类" class="headerlink" title="数控机床分类"></a>数控机床分类</h3><ol>
<li>按照数控系统分类<ul>
<li>Funuc(日)</li>
<li>西门子(德)</li>
<li>华中(中)</li>
<li>广数(中)</li>
<li>凯恩帝(中)</li>
</ul>
</li>
<li>按照主轴系统分类<ul>
<li>立式</li>
<li>卧式<ul>
<li>水平导轨式</li>
<li>倾斜导轨式</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="数控车床用途（加工范围）"><a href="#数控车床用途（加工范围）" class="headerlink" title="数控车床用途（加工范围）"></a>数控车床用途（加工范围）</h3><ul>
<li>数控车床是使用较为广泛的 数控机床 之一。 它主要用于 轴类零件 或盘类零件的内外圆柱面、任意锥角的内外圆锥面、复杂回转内外曲面和圆柱、圆锥螺纹等切削加工，并能进行切槽、 钻孔 、扩孔、铰孔及镗孔等。</li>
</ul>
<h3 id="数控车床主要系统"><a href="#数控车床主要系统" class="headerlink" title="数控车床主要系统"></a>数控车床主要系统</h3><ul>
<li>Funuc(日)</li>
<li>西门子(德)</li>
<li>华中(中)</li>
<li>广数(中)</li>
<li>凯恩帝(中)</li>
</ul>
<h3 id="数控车五大指令"><a href="#数控车五大指令" class="headerlink" title="数控车五大指令"></a>数控车五大指令</h3><ol>
<li>G表示：准备功能。</li>
<li>M表示：辅助功能。</li>
<li>S表示：主轴功能。</li>
<li>T表示：刀具功能。</li>
<li>F表示：进给功能。</li>
</ol>
<blockquote>
<p><strong>补充</strong><br>第一台数控机床：美国麻省理工学院在1952年研制出第一台带有控制器的三轴铣床，标志着世界上第一台数控机床的诞生。<br>中国第一台数控机床：1958年，北京第一机床厂与清华大学合作，试制出中国第一台数控机床——X53K1三坐标数控机床。</p>
</blockquote>
<h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="五大指令"><a href="#五大指令" class="headerlink" title="五大指令"></a>五大指令</h3><h4 id="G（FUNUC）"><a href="#G（FUNUC）" class="headerlink" title="G（FUNUC）"></a>G（FUNUC）</h4><h5 id="FANUC-0iMate-TD系统与SINUMERIK828D系统常用G代码功能"><a href="#FANUC-0iMate-TD系统与SINUMERIK828D系统常用G代码功能" class="headerlink" title="FANUC 0iMate-TD系统与SINUMERIK828D系统常用G代码功能"></a>FANUC 0iMate-TD系统与SINUMERIK828D系统常用G代码功能</h5><table>
  <tr>
    <th>G代码</th>
    <th>发那科系统含义</th>
    <th>西门子系统含义</th>
  </tr>
  <tr>
    <td>G00</td>
    <td>快速点定位(快速移动)</td>
    <td>快速点定位(快速移动)</td>
  </tr>
  <tr>
    <td>G01</td>
    <td>直线插补</td>
    <td>直线插补</td>
  </tr>
  <tr>
    <td>G02</td>
    <td>顺时针圆弧插补</td>
    <td>顺时针圆弧插补</td>
  </tr>
  <tr>
    <td>G03</td>
    <td>逆时针圆弧插补</td>
    <td>逆时针圆弧插补</td>
  </tr>
  <tr>
    <td>G04</td>
    <td>暂停</td>
    <td>暂停</td>
  </tr>
  <tr>
    <td>G28</td>
    <td>返回参考点</td>
    <td>用G74表示返回参考点</td>
  </tr>
  <tr>
    <td>G32</td>
    <td>切削螺纹</td>
    <td>用G33表示切削螺纹</td>
  </tr>
  <tr>
    <td>G40</td>
    <td>取消刀尖圆弧半径补偿</td>
    <td>取消刀尖圆弧半径补偿</td>
  </tr>
  <tr>
    <td>G41</td>
    <td>刀尖圆弧半径左补偿</td>
    <td>刀尖圆弧半径左补偿</td>
  </tr>
  <tr>
    <td>G42</td>
    <td>刀尖圆弧半径右补偿</td>
    <td>刀尖圆弧半径右补偿</td>
  </tr>
  <tr>
    <td>G70</td>
    <td>精车复合循环</td>
    <td rowspan="4">西门子毛坯循环用 CYCLE952</td>
  </tr>
  <tr>
    <td>G71</td>
    <td>粗车复合循环</td>
  </tr>
  <tr>
    <td>G72</td>
    <td>端面粗车复合循环</td>
  </tr>
  <tr>
    <td>G73</td>
    <td>固定形状粗车复合循环</td>
  </tr>
  <tr>
    <td>G74</td>
    <td>端面深孔钻削、端面车槽复合循环</td>
    <td>回参考点</td>
  </tr>
  <tr>
    <td>G75</td>
    <td>径向沟槽复合循环</td>
    <td>回固定点(西门子车槽循环用 CYCLE930、CYCLE940)</td>
  </tr>
  <tr>
    <td>G76</td>
    <td>螺纹切削复合循环</td>
    <td>西门子螺纹切削复合循环用CYCLE99</td>
  </tr>
  <tr>
    <td>G90</td>
    <td>外圆(内孔)单一固定循环</td>
    <td>绝对值编程</td>
  </tr>
  <tr>
    <td>G92(重点)</td>
    <td>螺纹切削单一循环</td>
    <td>未指定</td>
  </tr>
  <tr>
    <td>G96</td>
    <td>主轴转速恒定切削速度</td>
    <td>主轴转速恒定切削速度</td>
  </tr>
  <tr>
    <td>G97</td>
    <td>取消主轴恒定切削速度</td>
    <td>取消主轴恒定切削速度</td>
  </tr>
  <tr>
    <td>G98</td>
    <td>每分钟进给量(mm/min)</td>
    <td>未指定</td>
  </tr>
  <tr>
    <td>G99</td>
    <td>每转进给量(mm/r)</td>
    <td>未指定</td>
  </tr>
</table>



<h4 id="M"><a href="#M" class="headerlink" title="M"></a>M</h4><h5 id="FANUC-0i-Mate-和-SINUMERIK-828D-系统常用辅助功能指令及含义"><a href="#FANUC-0i-Mate-和-SINUMERIK-828D-系统常用辅助功能指令及含义" class="headerlink" title="FANUC 0i Mate 和 SINUMERIK 828D 系统常用辅助功能指令及含义"></a>FANUC 0i Mate 和 SINUMERIK 828D 系统常用辅助功能指令及含义</h5><table>
<thead>
<tr>
<th>指令</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>M00</td>
<td>程序停止</td>
</tr>
<tr>
<td>M01</td>
<td>计划停止</td>
</tr>
<tr>
<td>M02</td>
<td>程序结束</td>
</tr>
<tr>
<td>M03</td>
<td>主轴正转</td>
</tr>
<tr>
<td>M04</td>
<td>主轴反转</td>
</tr>
<tr>
<td>M05</td>
<td>主轴停</td>
</tr>
<tr>
<td>M08</td>
<td>切削液开</td>
</tr>
<tr>
<td>M09</td>
<td>切削液关</td>
</tr>
<tr>
<td>M30</td>
<td>程序结束</td>
</tr>
</tbody></table>
<blockquote>
<p>（必考）M02和M30的区别:<br>M02和M30都是程序结束的指令<br>但是M02指的是程序结束且光标停止在程序结束处，而M30指的是程序结束且光标跳转到程序开头。<br>M02是停止指令，完成工件加工程序段的所有指令后，使主轴、进给和冷却液停止，程序光标停在程序末尾。<br>M30是复位指令，完成停止动作后，重新复位，完成M02指令功能外，还使储存器中的加工程序返回到初始状态。 </p>
</blockquote>
<h4 id="S"><a href="#S" class="headerlink" title="S"></a>S</h4><ul>
<li>不同材料加工转速</li>
</ul>
<table>
<thead>
<tr>
<th>材料</th>
<th>S转速（mm&#x2F;min）</th>
</tr>
</thead>
<tbody><tr>
<td>钢（45#）、铁、铝</td>
<td>S600——S1200</td>
</tr>
<tr>
<td>不锈钢</td>
<td>S300——S500</td>
</tr>
<tr>
<td>尼龙</td>
<td>1000以上</td>
</tr>
</tbody></table>
<h4 id="T"><a href="#T" class="headerlink" title="T"></a>T</h4><table>
<thead>
<tr>
<th>代码</th>
<th>对应刀具</th>
</tr>
</thead>
<tbody><tr>
<td>T0101</td>
<td>一号刀具（90度外圆车刀）</td>
</tr>
<tr>
<td>T0202</td>
<td>二号刀具（切刀）</td>
</tr>
<tr>
<td>T0303</td>
<td>三号刀具（螺纹刀）</td>
</tr>
<tr>
<td>T0404</td>
<td>四号刀具（35度偏刀）</td>
</tr>
</tbody></table>
<h4 id="F"><a href="#F" class="headerlink" title="F"></a>F</h4><ul>
<li>常用的进给速度单位一般是每转进给量(mm&#x2F;r),即G99</li>
<li>常用的进给速度一般是F（0.1——0.3），最常用的一般是0.15。（这里是指每转进给量）<blockquote>
<p>粗车和精车的区别<br>简单来说：</p>
<ol>
<li><strong>目的</strong>：粗车是为了快速去除材料，精车是为了提高精度和表面质量。</li>
<li><strong>精度</strong>：粗车的精度较低，精车的精度较高。</li>
<li><strong>切削用量</strong>：粗车使用较大的切削深度和进给量，精车使用较小的切削深度和进给量。</li>
<li><strong>刀具</strong>：粗车刀具角度大，精车刀具角度小，更适合精细加工。</li>
<li><strong>机床</strong>：粗车可以在普通机床上完成，精车则需要更精密的机床。</li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="编程-1"><a href="#编程-1" class="headerlink" title="编程"></a>编程</h3><blockquote>
<p>从这里正式开始我们的编程部分</p>
</blockquote>
<h4 id="G00"><a href="#G00" class="headerlink" title="G00"></a>G00</h4><blockquote>
<p>在发那科数控机床中，G00指令代表的是“快速定位”。这个指令用于控制数控机床在两个指定点之间以最高速度进行快速移动，而不进行任何加工操作。G00指令的主要作用是实现机床的快速移动，可以大大缩短加工时间。在数控加工过程中，机床需要在不同的加工点之间进行移动，而G00指令则提供了一种快速移动的方式。使用G00指令时，机床会以最大速度移动到目标位置，不进行切削或加工操作。这种快速移动有助于提高生产效率和机床的运行速度。简而言之，G00是一个用于快速定位的G代码指令，它使得机床能够迅速从一个位置移动到另一个位置，以提高加工效率。</p>
</blockquote>
<ul>
<li><p><strong>格式</strong>：<code>G00 X(U)_ Z(W)_</code></p>
<p>这里，<code>X(U)</code> 和 <code>Z(W)</code> 分别代表目标点的绝对坐标或相对坐标位移。其中，<code>X</code> 和 <code>Z</code> 表示目标点的绝对坐标，而 <code>U</code> 和 <code>W</code> 表示目标点相对于刀具当前位置的相对坐标位移。<code>X(U)</code> 表示坐标按直径输入。在使用G00指令时，需要注意以下几点：</p>
<ol>
<li>该指令使刀具按照点位控制方式快速移动到指定位置。移动过程中不得对工件进行加工。</li>
<li>所有编程轴同时以参数所定义的速度移动，当某轴走完编程值便停止，而其他轴继续运动。</li>
<li>不运动的坐标无须编程。</li>
<li>G00可以写成G0。</li>
</ol>
</li>
</ul>
<p>例如，如果有一个指令 <code>G00 X75 Z200</code>，它将使刀具快速移动到X轴75单位，Z轴200单位的位置。这种快速移动不会对工件进行加工，且各轴以最大速度独立移动，直到达到指定位置。</p>
<h4 id="GO1"><a href="#GO1" class="headerlink" title="GO1"></a>GO1</h4><blockquote>
<p>在发那科数控机床中，G01指令代表的是“直线插补”。这个指令用于控制数控机床的刀具沿直线路径从一个点移动到另一个点，通常用于切削加工。以下是G01指令的一些关键特点：</p>
<ol>
<li><strong>直线移动</strong>：G01指令使刀具以直线方式移动到指定的坐标位置。</li>
<li><strong>速度控制</strong>：G01指令允许通过F指令参数来设置进给速度或切削速度。</li>
<li><strong>坐标系设置</strong>：在使用G01指令之前，需要确保正确设置了坐标系，以保证机床的坐标系与编程中的坐标系一致。</li>
<li><strong>运动路径规划</strong>：在编写G01指令时，需要仔细规划运动路径，确保路径是安全、稳定和符合加工要求的。</li>
<li><strong>坐标值准确性</strong>：在编写G01指令时，要确保输入的坐标值准确无误，错误的坐标值可能导致机床运动到错误的位置。</li>
</ol>
</blockquote>
<ul>
<li><strong>格式</strong>：<code>G01 X(U) Z(W) F</code><br>G01指令的格式通常为<code>G01 X(U) Z(W) F</code><ol>
<li>其中X、Z为要求移动到的位置的绝对坐标值；</li>
<li>U、W为要求移动到的位置的增量坐标值；</li>
<li>F为进给速率，即刀具移动的速度。</li>
<li>G01也可以写成G1。</li>
<li>这个指令在数控加工中非常关键，因为它允许精确控制刀具的直线运动，从而实现精确的加工。</li>
</ol>
</li>
</ul>
<h4 id="GO2-GO3"><a href="#GO2-GO3" class="headerlink" title="GO2&amp;GO3"></a>GO2&amp;GO3</h4><blockquote>
<p>在发那科数控机床中，G02和G03指令分别代表顺时针和逆时针方向的圆弧插补。</p>
</blockquote>
<ol>
<li><p><strong>G02指令</strong>：代表顺时针方向圆弧插补（Clockwise）。使用G02指令时，刀具会沿着顺时针方向的圆弧路径从一个点移动到另一个点。</p>
</li>
<li><p><strong>G03指令</strong>：代表逆时针方向圆弧插补（Counter-Clockwise）。使用G03指令时，刀具会沿着逆时针方向的圆弧路径从一个点移动到另一个点。</p>
</li>
<li><p><strong>G02和G03的格式</strong>:</p>
</li>
</ol>
<ul>
<li>这两个指令格式都是一样的:<code>G02(G03)) X终点坐标 Y终点坐标 R圆弧半径 F进给速率</code></li>
</ul>
<h4 id="G92指令"><a href="#G92指令" class="headerlink" title="G92指令"></a>G92指令</h4><blockquote>
<p>在发那科数控机床中，G92指令用于螺纹切削循环，它是一种简单螺纹循环指令，可以简化程序，用于切削加工圆柱螺纹和圆锥螺纹。</p>
</blockquote>
<ol>
<li><p><strong>指令格式</strong>：<code>G92 X Z F</code></p>
<ul>
<li>X、Z：分别代表螺纹终点的绝对坐标。</li>
<li>F：公制螺纹的螺距（单位：mm&#x2F;牙），必须为正数，默认值为1。</li>
</ul>
</li>
<li><p><strong>功能</strong>：G92指令可以切削加工圆柱螺纹，通过简化程序减少编程的复杂性。</p>
</li>
</ol>
<p>通过使用G92指令，可以在数控车床上高效、准确地进行螺纹加工。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>数控车床复习题</title>
    <url>/2024/12/09/%E6%95%B0%E6%8E%A7%E8%BD%A6%E5%BA%8A%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="A卷"><a href="#A卷" class="headerlink" title="A卷"></a>A卷</h1><h2 id="单项选择题"><a href="#单项选择题" class="headerlink" title="单项选择题"></a>单项选择题</h2><ol>
<li><p>零件加工螺纹时，F指( <strong>B</strong>)。</p>
<ul>
<li>A. 螺距</li>
<li>B. 导程</li>
<li>C. 根据主轴转速和螺纹导程计算出的进给速度</li>
<li>D. 任意</li>
</ul>
</li>
<li><p>全闭环控制系统的位置反馈元件应（<strong>B</strong>）。</p>
<ul>
<li>A. 装在电机轴上</li>
<li>B. 装在执行部件上</li>
<li>C. 装在传动丝杆上</li>
<li>D. 不需要位置</li>
</ul>
</li>
<li><p>一个完整的程序由(<strong>D</strong>)、程序内容和程序结束三部分组成。</p>
<ul>
<li>A. 程序序号</li>
<li>B. 程序字</li>
<li>C. 程序段号</li>
<li>D. 程序号</li>
</ul>
</li>
<li><p>数控机床的主轴轴线平行于（<strong>B</strong>）。</p>
<ul>
<li>A. X轴</li>
<li>B. Z轴</li>
<li>C. Y轴</li>
<li>D. C轴</li>
</ul>
</li>
<li><p>数控机床坐标轴的正方向规定为（<strong>A</strong>）。</p>
<ul>
<li>A. 增大工件和刀具之间的距离的方向</li>
<li>B. 减小工件和刀具之间的距离的方向</li>
<li>C. 刀具接近工件的方向</li>
<li>D. 任意方向</li>
</ul>
</li>
<li><p>在数控机床坐标系中，Y坐标轴（<strong>C</strong>）于X.Z坐标轴。</p>
<ul>
<li>A. 对称</li>
<li>B. 交叉</li>
<li>C. 垂直</li>
<li>D. 平行</li>
</ul>
</li>
<li><p>确定数控机床坐标轴时，一般应该先确定（<strong>C</strong>）。</p>
<ul>
<li>A. X轴</li>
<li>B. Y轴</li>
<li>C. Z轴</li>
<li>D. C轴</li>
</ul>
</li>
<li><p>对于径向尺寸要求比较高，轮廓形状单调递增，轴向切削尺寸大于径向切削尺寸的毛坯类下件进行车削循环。加工时，采用(<strong>A</strong>) 指令编程合适。</p>
<ul>
<li>A. G71</li>
<li>B. G72</li>
<li>C. G74</li>
<li>D. G75</li>
</ul>
</li>
<li><p>数控机床坐标系按坐标值读法不同可分为（<strong>A</strong>）和相对坐标值两类。</p>
<ul>
<li>A. 绝对坐标值</li>
<li>B. 标准坐标值</li>
<li>C. 参考坐标值</li>
<li>D. 增量坐标值</li>
</ul>
</li>
<li><p>在绝对坐标系中，刀具(或机床)运动轨迹的坐标值是以(<strong>C</strong>) 设定。</p>
<ul>
<li>A. 前一位置</li>
<li>B. 后一位置</li>
<li>C. 原点</li>
<li>D. 相邻的位置</li>
</ul>
</li>
</ol>
<h2 id="多项选择题"><a href="#多项选择题" class="headerlink" title="多项选择题"></a>多项选择题</h2><ol>
<li><p>下列程序号的格式正确的是(<strong>AD</strong>)。</p>
<ul>
<li>A. G04X1.5</li>
<li>B. G04P1.5</li>
<li>C. G04Q1.5</li>
<li>D. G04U1.5</li>
</ul>
</li>
<li><p>在右手直角笛卡儿坐标系中，用手指尖确定(<strong>ABC</strong>)的正方向。</p>
<ul>
<li>A. X轴</li>
<li>B. Y轴</li>
<li>C. Z轴</li>
<li>D. U轴</li>
</ul>
</li>
<li><p>机床某一部件运动的正方向，下列叙述正确的是(<strong>AB</strong>)。</p>
<ul>
<li>A. 增大工件和刀具之间的距离的方向</li>
<li>B. 刀具远离工件的方向</li>
<li>C. 减小工件和刀具之间的距离的方向</li>
<li>D. 刀具靠近工件的方向</li>
</ul>
</li>
<li><p>数控机床书写坐标值的方式有(<strong>AB</strong>)。</p>
<ul>
<li>A. 绝对坐标方式</li>
<li>B. 相对坐标方式</li>
<li>C. 原点方式</li>
<li>D. 参考方式</li>
</ul>
</li>
<li><p>工件坐标系原点的选择原则是（<strong>ABC</strong>）</p>
<ul>
<li>A. 设计基准</li>
<li>B. 工艺基准</li>
<li>C. 对称中心</li>
<li>D. 任意位置</li>
</ul>
</li>
<li><p>指令S后的数字的单位为（<strong>BC</strong>）</p>
<ul>
<li>A. r&#x2F;s</li>
<li>B. mm&#x2F;min</li>
<li>C. r&#x2F;min</li>
<li>D. r&#x2F;h</li>
</ul>
</li>
<li><p>数控编程的步骤一般包括分析零件图样和工艺处理、(<strong>AB</strong>)、输入数控系统、程序检验和首件试加工。</p>
<ul>
<li>A. 数学计算</li>
<li>B. 编写程序单</li>
<li>C. 对刀</li>
<li>D. 设定切削用量</li>
</ul>
</li>
<li><p>工件相对于刀具运动的数控机床有(<strong>ABD</strong>)。</p>
<ul>
<li>A. 数控铣床</li>
<li>B. 加工中心</li>
<li>C. 数控车床</li>
<li>D. 数控磨床</li>
</ul>
</li>
<li><p>用于程序结束的指令是(<strong>ABC</strong>)。</p>
<ul>
<li>A. M02</li>
<li>B. M30</li>
<li>C. M99</li>
<li>D. M05</li>
</ul>
</li>
<li><p>指令T0102的含义是(<strong>AB</strong>)。</p>
<ul>
<li>A. 01表示刀号</li>
<li>B. 02表示刀补号</li>
<li>C. 02表示刀号</li>
<li>D. 01表示刀补号</li>
</ul>
</li>
<li><p>下列叙述正确的是(<strong>AC</strong>)。</p>
<ul>
<li>A. 子程序执行完毕后返回主程序</li>
<li>B. 可以有多个主程序</li>
<li>C. 可以有多个子程序</li>
<li>D. 子程序可以调用主程序</li>
</ul>
</li>
<li><p>直线插补指令G01可以用来(<strong>ABC</strong>)。</p>
<ul>
<li>A. 编写孔加工程序</li>
<li>B. 编写平面加工程序</li>
<li>C. 编写端面加工程序</li>
<li>D. 编写螺纹加工程序</li>
</ul>
</li>
<li><p>若数控机床暂停3s,数控编程指令正确的是(<strong>AD</strong>)。</p>
<ul>
<li>A. G04X3</li>
<li>B. G04X300</li>
<li>C. G04P300</li>
<li>D. G04P3000</li>
</ul>
</li>
<li><p>程序编程中关于绝对坐标与增量坐标指令叙述错误的是(<strong>ABD</strong>)。</p>
<ul>
<li>A. 程序中只能用指令G90</li>
<li>B. 程序中只能用指令G91</li>
<li>C. 指令G90、G91在同一个程序可以混合使用</li>
<li>D. 子程序中不可以使用指令G91</li>
</ul>
</li>
<li><p>数控机床上用来表示程序停止的指令是(<strong>AD</strong>)。</p>
<ul>
<li>A. M02</li>
<li>B. M20</li>
<li>C. M03</li>
<li>D. M30</li>
</ul>
</li>
</ol>
<h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h2><p><font color="green">1. 在编制加工程序时，程序段号可以不写 (正确) </font></p>
<p><font color="green">2. T0101表示选用第一号刀，使用第一号刀具位置补偿值 (正确) </font></p>
<p><font color="green">3. 一个程序段内只允许有一个M指令 (正确) </font></p>
<p><font color="green">4. 数控车圆弧加工编程，既可以用圆心编程也可以用半径编程 (正确) </font></p>
<p><font color="green">5. 数控编程中既可以用绝对值编程，也可以用增量值编程 (正确) </font></p>
<p><font color="green">6. FANUC 有些系统中，程序“G01Z-20.0F0.4”是一正确的程序段 (正确) </font></p>
<p><font color="green">7. 在FANUC 数控车上指令G00X _ W _是正确的书写格式 (正确) </font></p>
<p><font color="green">8. 复合固定循环应用于非一次加工即能加工到规定尺寸的情况 (正确) </font></p>
<p><font color="green">9. 加工圆锥面的指令“G90 X _ Z _ R _ F _ ”中，R 为切削起点与圆锥面切削终点的半径差。 (正确) </font></p>
<p><font color="red">10. 加工圆锥面的指令“G90 X _ Z _ R _ F _ ”中，R 不可以为负数 (错误) </font></p>
<p><font color="red">11. G01 、G02 、G03 、G04都是模态指令 (错误) </font></p>
<p><font color="red">12. G32指令功能为螺纹切削加工，只能加工圆柱螺纹 (错误) </font></p>
<p><font color="green">13. 车螺纹时，必须设置升速段和降速段 (正确) </font></p>
<p><font color="red">14. 螺纹期间的进给速度倍率、主轴速度倍率有效 (错误) </font></p>
<p><font color="green">15. 螺纹加工的进给次数和背吃刀量会直接影响螺纹的加工质量 (正确) </font></p>
<p><font color="red">16. G92 指令只能加工圆锥螺纹 (错误) </font></p>
<p><font color="red">17. G32指令是FANUC 系统中用于加工螺纹的单一固定循环指令 (错误) </font></p>
<p><font color="red">18. 如果在单段方式下执行G92循环，则每执行一次必须按4次循环启动按钮 (错误) </font></p>
<p><font color="red">19. FANUC系统中，G76 指令只能用于圆柱螺纹的加工，不能用于圆锥螺纹的加工 (错误) </font></p>
<p><font color="red">20. 开环数控系统使用的电机为伺服电机，其精度取决于伺服电机的精度。 (错误) </font></p>
<h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><ol>
<li><p>数控车床私服系统控制方式分为哪三类?<br> 开环控制方式，闭环控制方式，半闭环控制方式<br> 开环用在经济型数控车床。<br> 闭环用在高精度车床。<br> 半闭环介于两者之间，用于精度较高的场合。</p>
</li>
<li><p>什么是零件加工路线？确定加工的路线原则?<br> 加工路线指数控机床加工过程中刀具到刀位点相对于被加工零件的移动轨迹和运动方向<br> 原则是保证零件加工精度和表面粗糙度的要求，尽量缩短加工路线，减少刀具空移动时间 应使数值简单，程序段少，以减少编程时间</p>
</li>
</ol>
<h2 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h2><p>第一大题</p>
<p><img src="/img/1.png" alt="第一大题"></p>
<ol>
<li><p>正确选择刀具和加工参数 （5分）</p>
<ol>
<li>外圆车刀：粗加工：被吃刀量2mm   主轴转速800&#x2F;r    进给速度：0.15mm&#x2F;r<br>     精加工：被吃刀量0.2mm   主轴转速1000&#x2F;r  进给速度：0.1mm&#x2F;r</li>
<li>切断刀：主轴转速500&#x2F;r    进给速度：0.1&#x2F;r</li>
</ol>
</li>
<li><p>正确编写零件的加工程序 （10分）</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O0001</span><br><span class="line">T0101</span><br><span class="line">M03S800</span><br><span class="line">G00X45.Z2.</span><br><span class="line">G71U2.R1.</span><br><span class="line">G71P1Q2U0.4W0.2F0.15</span><br><span class="line">N1G00X18.</span><br><span class="line">G01Z0</span><br><span class="line">X20.Z-1.</span><br><span class="line">Z-13.</span><br><span class="line">X24.</span><br><span class="line">Z-18.</span><br><span class="line">G02X28.W-2.R2.</span><br><span class="line">G01X30.</span><br><span class="line">Z-26.</span><br><span class="line">X36.Z-35.</span><br><span class="line">X38.</span><br><span class="line">G03X42.W-2.R2.</span><br><span class="line">G01Z-45.</span><br><span class="line">N2X44.</span><br><span class="line">G70P1Q2F0.1S1000</span><br><span class="line">G00X100.Z100.</span><br><span class="line">M05</span><br><span class="line">M03S600</span><br><span class="line">T0202</span><br><span class="line">G00X28.Z-13.</span><br><span class="line">G01X16.</span><br><span class="line">G04X1.0</span><br><span class="line">X28</span><br><span class="line">G00X100.Z100.</span><br><span class="line">T0303</span><br><span class="line">G00X24.Z2.</span><br><span class="line">G92X19.2Z-11.5F2.</span><br><span class="line">X18.6</span><br><span class="line">X18.</span><br><span class="line">X17.6</span><br><span class="line">X17.2</span><br><span class="line">M05</span><br><span class="line">M30</span><br></pre></td></tr></table></figure>

<p>第二大题</p>
<p><img src="/img/22.png" alt="第二大题"> </p>
<ol>
<li><p>正确选择刀具和加工参数 （5分）</p>
<ol>
<li>外圆车刀：粗加工：被吃刀量2mm   主轴转速800&#x2F;r    进给速度：0.15mm&#x2F;r<br>     精加工：被吃刀量0.2mm   主轴转速1000&#x2F;r  进给速度：0.1mm&#x2F;r</li>
<li>切断刀：主轴转速500&#x2F;r    进给速度：0.1&#x2F;r</li>
<li>螺纹车刀：主轴转速500&#x2F;r    进给速度：2mm&#x2F;r</li>
</ol>
</li>
<li><p>正确编写零件的加工程序 （10分）</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O0001</span><br><span class="line">T0101</span><br><span class="line">M03S800</span><br><span class="line">G00X40.Z2.</span><br><span class="line">G71U2.R1.</span><br><span class="line">G71P1Q2U0.4W0.2F0.15</span><br><span class="line">N1G00X0</span><br><span class="line">G01Z0</span><br><span class="line">G03X14.Z-7.R7.</span><br><span class="line">G01Z-18.</span><br><span class="line">X20.</span><br><span class="line">Z-36.</span><br><span class="line">X24.Z-42.</span><br><span class="line">W-6.</span><br><span class="line">G02X38W-7.R7.</span><br><span class="line">G01W-10.</span><br><span class="line">N2X40.</span><br><span class="line">G70P1Q2F0.1S1000</span><br><span class="line">G00X100.Z100.</span><br><span class="line">T0202S500</span><br><span class="line">G00X24.Z-36.</span><br><span class="line">G01X16.</span><br><span class="line">X28.</span><br><span class="line">G00X100.Z100.</span><br><span class="line">T0303</span><br><span class="line">G00X22.Z-15.</span><br><span class="line">G92X19.1Z-11.5F2.</span><br><span class="line">X18.5</span><br><span class="line">X17.9</span><br><span class="line">X17.5</span><br><span class="line">X17.4</span><br><span class="line">G00X100.Z100.</span><br><span class="line">M05</span><br><span class="line">M30</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="B卷"><a href="#B卷" class="headerlink" title="B卷"></a>B卷</h1><h2 id="单项选择题-1"><a href="#单项选择题-1" class="headerlink" title="单项选择题"></a>单项选择题</h2><ol>
<li><p>世界上第一台数控机床发明于( <strong>A</strong> )。</p>
<ul>
<li>A. 1952年、美国</li>
<li>B. 1952年、德国</li>
<li>C. 1953年、美国</li>
<li>D. 1959年、德国</li>
</ul>
</li>
<li><p>数控机床有不同的运动形式，需要考虑工件与刀具相对运动关系及坐标系方向，编写程序时，采用( <strong>B</strong> )的原则编写程序。</p>
<ul>
<li>A. 刀具固定不动，工件移动</li>
<li>B. 工件固定不动，刀具移动</li>
<li>C. 分析机床运动关系后再根据实际情况定</li>
<li>D. 由机床说明书说明</li>
</ul>
</li>
<li><p>脉冲当量是( <strong>D</strong> )。</p>
<ul>
<li>A. 每个脉冲信号使伺服电机转过的角度</li>
<li>B. 每个脉冲信号使传动丝杠传过的角度。</li>
<li>C. 数控装置输出脉冲数量</li>
<li>D. 每个脉冲信号使机床移动部件的位移量</li>
</ul>
</li>
<li><p>数控机床的核心是( <strong>B</strong> )。</p>
<ul>
<li>A. 伺服系统</li>
<li>B. 数控系统</li>
<li>C. 反馈系统</li>
<li>D. 传动系统</li>
</ul>
</li>
<li><p>为了编制程序和加工零件，在数控机床上建立的坐标系成为( <strong>A</strong> )。</p>
<ul>
<li>A. 工件坐标系</li>
<li>B. 机床坐标系</li>
<li>C. 绝对坐标系</li>
<li>D. 增量坐标系</li>
</ul>
</li>
<li><p>数控机床上采用右手直角笛卡儿坐标系，大拇指的方向为( <strong>A</strong> )的正方向。</p>
<ul>
<li>A. X轴</li>
<li>B. Y轴</li>
<li>C. Z轴</li>
<li>D. A轴</li>
</ul>
</li>
<li><p>功能仅在其出现的程序段中有效的代码是( <strong>D</strong> )。</p>
<ul>
<li>A. C. 代码</li>
<li>B. M代码</li>
<li>C. 模态代码</li>
<li>D. 非模态代码</li>
</ul>
</li>
<li><p>一个完整的程由( <strong>D</strong> )、程序内容和程序结束三部分组成。</p>
<ul>
<li>A. 程序序号</li>
<li>B. 程序字</li>
<li>C. 程序段号</li>
<li>D. 程序号</li>
</ul>
</li>
<li><p>数控机床的主轴轴线平行于( <strong>B</strong> )。</p>
<ul>
<li>A. X轴</li>
<li>B. Z轴</li>
<li>C. Y轴</li>
<li>D. C. 轴</li>
</ul>
</li>
<li><p>数控机床坐标轴的正方向规定为( <strong>A</strong> )。</p>
<ul>
<li>A. 增大工件和刀具之间的距离的方向</li>
<li>B. 减小工件和刀具之间的距离的方向</li>
<li>C. 刀具接近工件的方向</li>
<li>D. 任意方向</li>
</ul>
</li>
<li><p>在数控机床坐标系中，Y坐标轴( <strong>C</strong> )于X.Z坐标轴。</p>
<ul>
<li>A. 对称</li>
<li>B. 交叉</li>
<li>C. 垂直</li>
<li>D. 平行</li>
</ul>
</li>
<li><p>确定数控机床坐标轴时，一般应该先确定( <strong>C</strong> )。</p>
<ul>
<li>A. X轴</li>
<li>B. Y轴</li>
<li>C. Z轴</li>
<li>D. C. 轴</li>
</ul>
</li>
<li><p>对于径向尺寸要求比较高，轮廓形状单调递增，轴向切削尺寸大于径向切削尺寸的毛坯零件进行车削循环。加工时，采用( <strong>A</strong> ) 指令编程合适。</p>
<ul>
<li>A. G71</li>
<li>B. G72</li>
<li>C. G74</li>
<li>D. G75</li>
</ul>
</li>
<li><p>数控机床坐标系按坐标值读法不同可分为( <strong>A</strong> )和相对坐标值两类。</p>
<ul>
<li>A. 绝对坐标值</li>
<li>B. 标准坐标值</li>
<li>C. 参考坐标值</li>
<li>D. 增量坐标值</li>
</ul>
</li>
<li><p>在绝对坐标系中，刀具(或机床)运动轨迹的坐标值是以( <strong>C</strong> )设定。</p>
<ul>
<li>A. 前一位置</li>
<li>B. 后一位置</li>
<li>C. 原点</li>
<li>D. 相邻的位置</li>
</ul>
</li>
</ol>
<h2 id="多项选择题-1"><a href="#多项选择题-1" class="headerlink" title="多项选择题"></a>多项选择题</h2><ol>
<li><p>下列程序号的格式正确的是( <strong>A, C</strong> )。</p>
<ul>
<li>A. %1010</li>
<li>B. %10100</li>
<li>C. O1010</li>
<li>D. 101.</li>
</ul>
</li>
<li><p>在右手直角笛卡儿坐标系中，手指尖的所指向分别确定了( <strong>A, B, C</strong> )的正方向。</p>
<ul>
<li>A. X轴</li>
<li>B. Y轴</li>
<li>C. Z轴</li>
<li>D. U轴</li>
</ul>
</li>
<li><p>机床某一部件运动的正方向，下列叙述正确的是( <strong>A, B</strong> )。</p>
<ul>
<li>A. 增大工件和刀具之间的距离的方向</li>
<li>B. 刀具远离工件的方向</li>
<li>C. 减小工件和刀具之间的距离的方向</li>
<li>D. 刀具靠近工件的方向</li>
</ul>
</li>
<li><p>数控机床书写坐标值的方式有( <strong>A, B</strong> )。</p>
<ul>
<li>A. 绝对坐标方式</li>
<li>B. 相对坐标方式</li>
<li>C. 原点方式</li>
<li>D. 参考方式</li>
</ul>
</li>
<li><p>工件坐标系原点的选择原则是( <strong>A, B, C</strong> )。</p>
<ul>
<li>A. 设计基准</li>
<li>B. 工艺基准</li>
<li>C. 对称中心</li>
<li>D. 任意位置</li>
</ul>
</li>
<li><p>数控编程时，分析零件图样和工艺处理的目的是( <strong>A, B, C, D</strong> )。</p>
<ul>
<li>A. 设计加工路线</li>
<li>B. 优化切削参数</li>
<li>C. 提高生产效率</li>
<li>D. 降低生产成本</li>
</ul>
</li>
<li><p>数控编程的步骤一般包括分析零件图样和工艺处理、( <strong>A, B</strong> )、输入数控系统、程序检验和首件试加工。</p>
<ul>
<li>A. 数学计算</li>
<li>B. 编写程序单</li>
<li>C. 对刀</li>
<li>D. 设定切削用量</li>
</ul>
</li>
<li><p>工件相对于刀具运动的数控机床有( <strong>A, B, D</strong> )。</p>
<ul>
<li>A. 数控铣床</li>
<li>B. 加工中心</li>
<li>C. 数控车床</li>
<li>D. 数控磨床</li>
</ul>
</li>
<li><p>用于程序结束的指令是( <strong>A, B, C</strong> )。</p>
<ul>
<li>A. M02</li>
<li>B. M30</li>
<li>C. M99</li>
<li>D. M05</li>
</ul>
</li>
<li><p>指令T0102的含义是( <strong>A, B</strong> )。</p>
<ul>
<li>A. 01表示刀号</li>
<li>B. 02表示刀补号</li>
<li>C. 02表示刀号</li>
<li>D. 01表示刀补号</li>
</ul>
</li>
<li><p>下列叙述正确的是( <strong>A, C</strong> )。</p>
<ul>
<li>A. 子程序执行完毕后返回主程序</li>
<li>B. 可以有多个主程序</li>
<li>C. 可以有多个子程序</li>
<li>D. 子程序可以调用主程序</li>
</ul>
</li>
<li><p>直线插补指令G01可以用来( <strong>A, B, C</strong> )。</p>
<ul>
<li>A. 编写孔加工程序</li>
<li>B. 编写平面加工程序</li>
<li>C. 编写端面加工程序</li>
<li>D. 编写螺纹加工程序</li>
</ul>
</li>
<li><p>若数控机床暂停3s，数控编程指令正确的是( <strong>A, D</strong> )。</p>
<ul>
<li>A. G04X3</li>
<li>B. G04X300</li>
<li>C. G04P300</li>
<li>D. G04P3000</li>
</ul>
</li>
<li><p>程序编程中关于绝对坐标与增量坐标指令叙述错误的是( <strong>A, B, D</strong> )。</p>
<ul>
<li>A. 程序中只能用指令G90</li>
<li>B. 程序中只能用指令G91</li>
<li>C. 指令G90、G91在同一个程序可以混合使用</li>
<li>D. 子程序中不可以使用指令G91</li>
</ul>
</li>
<li><p>数控机床上用来表示机床主轴转速的指令是( <strong>A, B</strong> )。</p>
<ul>
<li>A. G96</li>
<li>B. G97</li>
<li>C. G98</li>
<li>D. G99</li>
</ul>
</li>
</ol>
<h2 id="判断题-1"><a href="#判断题-1" class="headerlink" title="判断题"></a>判断题</h2><p><font color="red">1. 数控机床的进给运动是固定的，一律是刀具相对于工件的运动（错误）</font></p>
<p><font color="red">2. G04X2表示数控机床暂停2秒，也可以用G04p200表示（错误）</font></p>
<p><font color="red">3. 数控人员在编写程序时，必须考虑刀具移向工件或者工件移向刀具（错误）</font></p>
<p><font color="green">4. 数控机床上所采用的右手直角笛卡儿坐标系中，中指的方向为Z轴的正方向（正确）</font></p>
<p><font color="red">5. 直线插补指令G01的运动速度是由数控系统指令（错误）</font></p>
<p><font color="green">6. 数控机床主轴的顺时针旋转运动方向为正转（正确）</font></p>
<p><font color="red">7. 设定数控机床坐标时，绝对坐标值和相对坐标值没有任何区别（错误）</font></p>
<p><font color="red">8. 机床坐标系是机床上固有的坐标系，用户可以任意设定（错误）</font></p>
<p><font color="red">9. 工件坐标系原点的设定不必考虑工件的尺寸精度和工件的形状（错误）</font></p>
<p><font color="red">10. 手工编程与自动编程的区别是手工编程的出错率不高能及时发现程序中的错误（错误）</font></p>
<h2 id="编程题-1"><a href="#编程题-1" class="headerlink" title="编程题"></a>编程题</h2><p><img src="/img/1b.png" alt="第一大题"></p>
<ol>
<li>正确选择刀具和加工参数（ 5分）<ol>
<li>外圆车刀：粗加工：被吃刀量2mm   主轴转速800&#x2F;r    进给速度：0.15mm&#x2F;r<br>     精加工：被吃刀量0.2mm   主轴转速1000&#x2F;r    进给速度：0.1mm&#x2F;r</li>
<li>切断刀：主轴转速500&#x2F;r    进给速度：0.1&#x2F;r</li>
</ol>
</li>
<li>正确编写零件的加工程序（10 分）</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O01</span><br><span class="line">T0101</span><br><span class="line">M03S800</span><br><span class="line">G00X45.Z2.</span><br><span class="line">G71U2.R1.</span><br><span class="line">G71P1Q2U0.4W0.2F0.15</span><br><span class="line">N1G00X10.</span><br><span class="line">G01Z0</span><br><span class="line">G03X20.Z-5.R5.</span><br><span class="line">G01Z-10</span><br><span class="line">X24.Z-20.</span><br><span class="line">X26.</span><br><span class="line">X30.W-2.</span><br><span class="line">Z-32.</span><br><span class="line">G02X36.W-3.R3.</span><br><span class="line">G01X42.Z-45.</span><br><span class="line">N2X44.</span><br><span class="line">G70P1Q2F0.1S1000</span><br><span class="line">G00X100.Z100.</span><br><span class="line">M05</span><br><span class="line">M03S600</span><br><span class="line">T0202</span><br><span class="line">G00X32.Z-32..</span><br><span class="line">G01X26.</span><br><span class="line">G04X1.0</span><br><span class="line">G01X32.</span><br><span class="line">G00X100.Z100.</span><br><span class="line">T0303</span><br><span class="line">G00X32.Z-18.</span><br><span class="line">G92X29.2Z-11.5F1.5.</span><br><span class="line">X28.6</span><br><span class="line">X28.2</span><br><span class="line">X28.05</span><br><span class="line">M05</span><br><span class="line">M30</span><br></pre></td></tr></table></figure>

<h1 id="c卷"><a href="#c卷" class="headerlink" title="c卷"></a>c卷</h1><h2 id="单项选择题-2"><a href="#单项选择题-2" class="headerlink" title="单项选择题"></a>单项选择题</h2><ol>
<li><p>程序内容是由若干个 ( <strong>B</strong> ) 组成。  </p>
<ul>
<li>A. 程序号  </li>
<li><strong>B. 程序段</strong>  </li>
<li>C. 程序字  </li>
<li>D. 程序段号</li>
</ul>
</li>
<li><p>一个完整的程序由 ( <strong>D</strong> )、程序内容和程序结束三部分组成。  </p>
<ul>
<li>A. 程序序号  </li>
<li>B. 程序字  </li>
<li>C. 程序段号  </li>
<li><strong>D. 程序号</strong></li>
</ul>
</li>
<li><p>与程序“%0101”等效的是 ( <strong>B</strong> )。  </p>
<ul>
<li>A. %1001  </li>
<li><strong>B. %101</strong>  </li>
<li>C. %1010  </li>
<li>D. %01001</li>
</ul>
</li>
<li><p>以下哪些可以作为程序结束的指令 ( <strong>C</strong> )。  </p>
<ul>
<li>A. M20  </li>
<li>B. M21  </li>
<li><strong>C. M30</strong>  </li>
<li>D. M03</li>
</ul>
</li>
<li><p>为了编制程序和加工零件，在数控机床上建立的坐标系称为 ( <strong>A</strong> )。  </p>
<ul>
<li><strong>A. 工件坐标系</strong>  </li>
<li>B. 机床坐标系  </li>
<li>C. 绝对坐标系  </li>
<li>D. 增量坐标系</li>
</ul>
</li>
<li><p>数控机床上采用右手直角笛卡儿坐标系，大拇指的方向为 ( <strong>A</strong> ) 的正方向。  </p>
<ul>
<li><strong>A. X轴</strong>  </li>
<li>B. Y轴  </li>
<li>C. Z轴  </li>
<li>D. U轴</li>
</ul>
</li>
<li><p>数控机床上采用右手直角笛卡儿坐标系，食指的方向为 ( <strong>B</strong> ) 的正方向。  </p>
<ul>
<li>A. X轴  </li>
<li><strong>B. Y轴</strong>  </li>
<li>C. Z轴  </li>
<li>D. U轴</li>
</ul>
</li>
<li><p>数控机床上采用右手直角笛卡儿坐标系，中指的方向为 ( <strong>C</strong> ) 的正方向。  </p>
<ul>
<li>A. X轴  </li>
<li>B. Y轴  </li>
<li><strong>C. Z轴</strong>  </li>
<li>D. U轴</li>
</ul>
</li>
<li><p>数控机床的主轴轴线平行于 ( <strong>B</strong> )。  </p>
<ul>
<li>A. X轴  </li>
<li><strong>B. Z轴</strong>  </li>
<li>C. Y轴  </li>
<li>D. C轴</li>
</ul>
</li>
<li><p>数控机床坐标轴的正方向规定为 ( <strong>A</strong> )。  </p>
<ul>
<li><strong>A. 增大工件和刀具之间的距离的方向</strong>  </li>
<li>B. 减小工件和刀具之间的距离的方向  </li>
<li>C. 刀具接近工件的方向  </li>
<li>D. 任意方向</li>
</ul>
</li>
<li><p>在数控机床坐标系中，Y坐标轴 ( <strong>C</strong> ) 于 X、Z 坐标轴。  </p>
<ul>
<li>A. 对称  </li>
<li>B. 交叉  </li>
<li><strong>C. 垂直</strong>  </li>
<li>D. 平行</li>
</ul>
</li>
<li><p>确定数控机床坐标轴时，一般应该先确定 ( <strong>C</strong> )。  </p>
<ul>
<li>A. X轴  </li>
<li>B. Y轴  </li>
<li><strong>C. Z轴</strong>  </li>
<li>D. C轴</li>
</ul>
</li>
<li><p>绕Y轴旋转的回转运动坐标轴是 ( <strong>B</strong> )。  </p>
<ul>
<li>A. A轴  </li>
<li><strong>B. B轴</strong>  </li>
<li>C. Z轴  </li>
<li>D. C轴</li>
</ul>
</li>
<li><p>数控机床坐标系按坐标值读法不同可分为 ( <strong>A</strong> ) 和相对坐标值两类。  </p>
<ul>
<li><strong>A. 绝对坐标值</strong>  </li>
<li>B. 标准坐标值  </li>
<li>C. 参考坐标值  </li>
<li>D. 增量坐标值</li>
</ul>
</li>
<li><p>在绝对坐标系中，刀具 (或机床) 运动轨迹的坐标值是以 ( <strong>C</strong> ) 设定。  </p>
<ul>
<li>A. 前一位置  </li>
<li>B. 后一位置  </li>
<li><strong>C. 原点</strong>  </li>
<li>D. 相邻的位置</li>
</ul>
</li>
</ol>
<h2 id="多项选择题-2"><a href="#多项选择题-2" class="headerlink" title="多项选择题"></a>多项选择题</h2><ol>
<li><p>工件相对于刀具运动的数控机床有 ( <strong>A, B</strong> )。  </p>
<ul>
<li><strong>A. 数控铣床</strong>  </li>
<li><strong>B. 加工中心</strong>  </li>
<li>C. 数控车床  </li>
<li>D. 数控磨床</li>
</ul>
</li>
<li><p>在右手直角笛卡儿坐标系中，用手指确定 ( <strong>A, B, C</strong> ) 的正方向。  </p>
<ul>
<li><strong>A. X轴</strong>  </li>
<li><strong>B. Y轴</strong>  </li>
<li><strong>C. Z轴</strong>  </li>
<li>D. U轴</li>
</ul>
</li>
<li><p>机床某一部件运动的正方向，下列叙述正确的是 ( <strong>A, B</strong> )。  </p>
<ul>
<li><strong>A. 增大工件和刀具之间的距离的方向</strong>  </li>
<li><strong>B. 刀具远离工件的方向</strong>  </li>
<li>C. 减小工件和刀具之间的距离的方向  </li>
<li>D. 刀具靠近工件的方向</li>
</ul>
</li>
<li><p>数控机床书写坐标值的方式有 ( <strong>A, B</strong> )。  </p>
<ul>
<li><strong>A. 绝对坐标方式</strong>  </li>
<li><strong>B. 相对坐标方式</strong>  </li>
<li>C. 原点方式  </li>
<li>D. 参考方式</li>
</ul>
</li>
<li><p>工件坐标系原点的选择原则是 ( <strong>A, B, C</strong> )。  </p>
<ul>
<li><strong>A. 设计基准</strong>  </li>
<li><strong>B. 工艺基准</strong>  </li>
<li><strong>C. 对称中心</strong>  </li>
<li>D. 任意位置</li>
</ul>
</li>
<li><p>数控编程时，分析零件图样和工艺处理的目的是 ( <strong>A, B, C, D</strong> )。  </p>
<ul>
<li><strong>A. 设计加工路线</strong>  </li>
<li><strong>B. 优化切削参数</strong>  </li>
<li><strong>C. 提高生产效率</strong>  </li>
<li><strong>D. 降低生产成本</strong></li>
</ul>
</li>
<li><p>数控编程的步骤一般包括分析零件图样和工艺处理、( <strong>A, B</strong> )、输入数控系统、程序检验和首件试加工。  </p>
<ul>
<li><strong>A. 数学计算</strong>  </li>
<li><strong>B. 编写程序单</strong>  </li>
<li>C. 对刀  </li>
<li>D. 设定切削用量</li>
</ul>
</li>
<li><p>下列程序号的格式正确的是 ( <strong>A, C</strong> )。  </p>
<ul>
<li><strong>A. %1010</strong>  </li>
<li>B. %10100  </li>
<li><strong>C. O1010</strong>  </li>
<li>D. 0101</li>
</ul>
</li>
<li><p>用于程序结束的指令是 ( <strong>A, B, C</strong> )。  </p>
<ul>
<li><strong>A. M02</strong>  </li>
<li><strong>B. M30</strong>  </li>
<li><strong>C. M99</strong>  </li>
<li>D. M05</li>
</ul>
</li>
<li><p>指令 T0102 的含义是 ( <strong>A, B</strong> )。  </p>
<ul>
<li><strong>A. 01 表示刀号</strong>  </li>
<li><strong>B. 02 表示刀补号</strong>  </li>
<li>C. 02 表示刀号  </li>
<li>D. 01 表示刀补号</li>
</ul>
</li>
<li><p>下列叙述正确的是 ( <strong>A, C</strong> )。  </p>
<ul>
<li><strong>A. 子程序执行完毕后返回主程序</strong>  </li>
<li>B. 可以有多个主程序  </li>
<li><strong>C. 可以有多个子程序</strong>  </li>
<li>D. 子程序可以调用主程序</li>
</ul>
</li>
<li><p>直线插补指令 G01 可以用来 ( <strong>A, B, C</strong> )。  </p>
<ul>
<li><strong>A. 编写孔加工程序</strong>  </li>
<li><strong>B. 编写平面加工程序</strong>  </li>
<li><strong>C. 编写端面加工程序</strong>  </li>
<li>D. 编写螺纹加工程序</li>
</ul>
</li>
<li><p>若数控机床暂停3秒，数控编程指令正确的是 ( <strong>A, D</strong> )。  </p>
<ul>
<li><strong>A. G04 X3</strong>  </li>
<li>B. G04 X300  </li>
<li>C. G04 P300  </li>
<li><strong>D. G04 P3000</strong></li>
</ul>
</li>
<li><p>程序编程中关于绝对坐标与增量坐标指令叙述错误的是 ( <strong>A, B, D</strong> )。  </p>
<ul>
<li><strong>A. 程序中只能用指令 G90</strong>  </li>
<li><strong>B. 程序中只能用指令 G91</strong>  </li>
<li>C. 指令 G90、G91 在同一个程序可以混合使用  </li>
<li><strong>D. 子程序中不可以使用指令 G91</strong></li>
</ul>
</li>
<li><p>数控机床上用来表示机床主轴转速的指令是 ( <strong>A, B</strong> )。  </p>
<ul>
<li><strong>A. G96</strong>  </li>
<li><strong>B. G97</strong>  </li>
<li>C. G98</li>
</ul>
</li>
</ol>
<h2 id="判断题-2"><a href="#判断题-2" class="headerlink" title="判断题"></a>判断题</h2><p><font color="red">1. 数控机床的进给运动是固定的，一律是刀具相对于工件的运动（错误）</font>  </p>
<p><font color="red">2. 编程人员在编写程序时，必须考虑刀具移向工件或者工件移向刀具（错误）</font>  </p>
<p><font color="red">3. 数控人员在编写程序时，必须考虑刀具移向工件或者工件移向刀具（错误）</font>  </p>
<p><font color="green">4. 数控机床上所采用的右手直角笛卡儿坐标系中，中指的方向为Z轴的正方向（正确）</font>  </p>
<p><font color="red">5. 数控机床中旋转坐标轴的正方向判断是用左手螺旋定则（错误）</font>  </p>
<p><font color="green">6. 数控机床主轴的顺时针旋转运动方向为正转（正确）</font>  </p>
<p><font color="red">7. 设定数控机床坐标时，绝对坐标值和相对坐标值没有任何区别（错误）</font>  </p>
<p><font color="red">9. 工件坐标系原点的设定不必考虑工件的尺寸精度和工件的形状（错误）</font>  </p>
<p><font color="red">10. 手工编程与自动编程的区别是手工编程的出错率不高能及时发现程序中的错误（错误）</font>  </p>
]]></content>
  </entry>
</search>
